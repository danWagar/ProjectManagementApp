{"version":3,"sources":["services/base.js","services/Auth.js","services/dbServices.js","components/Loading/Loading.js","hooks/useFormValidation.js","services/dateConversions.js","hooks/validateInput.js","components/Form/Form.js","components/Dropdown/Dropdown.js","components/Project/ProjectForm/ProjectForm.js","components/StyleIcon/StyleIcon.js","components/Sidebar/Sidebar.js","components/ProgressBar/ProgressBar.js","components/Project/ProjectBar/ProjectBar.js","components/Dashboard/Dashboard.js","components/Project/JobForm/JobForm.js","components/JobNotification/JobNotificationList.js","components/JobNotification/OwnerNotification.js","components/JobNotification/JobNotification.js","components/Header/Header.js","components/Account/Login.js","components/Account/SignUp.js","components/Project/WorkerEditForm/WorkerEditForm.js","components/LogHours/LogHours.js","hooks/useInput.js","components/Project/Jobs/JobItem.js","components/Project/Jobs/Jobs.js","components/Statistics/Statistics.js","components/Project/ProjectView/ProjectView.js","components/LandingPage/LandingPage.js","services/PrivateRoute.js","services/PublicRoute.js","components/Profile/Profile.js","components/CatchAll/CatchAll.js","App.js","index.js","images/lazy.svg","images/skyscraper.svg"],"names":["app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","React","createContext","db","firestore","dbServices","createOwner","user","org","role","a","async","collection","doc","set","name","then","createUserInOrg","getAllOrgs","get","newUser","new","orgRef","docSnapshot","exists","onSnapshot","email","Error","jobsListener","id","promoteUser","update","promoted","projectsListener","getEmployeeProjects","where","getManagerProjects","getProjectJobsForEmployee","initDashboard","projs","managers","getProjectsByRole","forEach","proj","push","data","getProjectManagers","pm","projects","project_managers","getProjectById","deleteProjectById","delete","deleteJobById","addProject","newProject","project_manager","org_id","add","setProjId","orgId","updateProject","setProjectsManager","projId","getUser","getJobs","getEmployees","addJob","newJob","project_id","organization","catch","error","docRef","updateEdit","edit","updateJobAlert","jobObj","alert","updateProjectWorkers","workers","project_workers","updateJob","updateJobStatus","status","approval","date_completed","updateJobApproval","this","state","editJob","updateAndSetJobs","index","jobs","findIndex","job","newArray","setState","editAndSetJobs","updateWorker","worker","updatePromoted","Loading","props","className","type","color","height","width","useFormValidation","initialState","validate","runOnSubmit","useState","values","setValues","errors","setErrors","touched","setTouched","isSubmitting","setSubmitting","useEffect","Object","keys","length","validationErrors","touchedErrors","filter","key","includes","reduce","acc","handleSubmit","event","preventDefault","handleChange","target","value","handleBlur","dateConversions","dateToTimestamp","date","setMinutes","getMinutes","getTimezoneOffset","Timestamp","fromDate","Date","TStoFormDate","ts","toDate","toJSON","slice","TStoDisplayDate","year","getFullYear","month","getMonth","day","dateDiff","deadline","currDate","dueDate","seconds","res","Math","abs","days","floor","validateInput","validateJobForm","trim","description","total_hours","validateLogin","password","validateSignup","passRegex","RegExp","test","orgName","validateProjectForm","now","validateWorkerEditForm","note","Label","cx","Input","forwardRef","ref","Textarea","Dropdown","selectedOption","setSelected","populateOptions","array","selectArray","map","newObj","label","employees","context","currentUser","snapshot","console","warn","Swal","fire","title","text","icon","confirmButtonText","defaultValue","onChange","options","isMulti","isSearchable","placeholder","Component","contextType","ProjectForm","setError","selected","INITIAL_STATE","date_created","progress","addToProjState","updateProjInState","toggleForm","onClose","onSubmit","htmlFor","test-id","onBlur","required","onClick","styleIconMap","requestEdit","revise","submit","faArrowAltCircleUp","clock","faClock","left","collapse","complete","faCalendarCheck","approve","faCheckSquare","close","faTimesCircle","plus","faPlus","minus","faMinus","expand","collapseBig","expandBig","default","StyleIcon","style","Sidebar","employeeList","setEmployeeList","pmList","setPMList","expanded","setExpanded","clicked","setClick","useContext","toggleExpand","section","newExpanded","item","pms","getPMs","to","emp","ProgressBar","percentage","ProjectBar","setEdit","toggleEdit","data-tip","showCancelButton","dismiss","view","deleteProjInState","autoComplete","window","location","href","place","effect","Dashboard","projectManagers","loading","expandProjects","expandCompleteProjects","expandPersonnel","newProj","errorClose","toggleExpandProjects","e","stopPropagation","toggleExpandCompleteProjects","toggleExpandPersonnel","toggleNewProj","completedProjects","completeProjects","updatedProjects","p","updatePM","sortedProjectsComplete","sortedProjectsIncomplete","project","sort","b","alt","background","toDateString","NewJob","itm","projectManager","hours_completed","employee_hours","hours","employee","find","updatedProjectWorkers","showJobForm","disabled","JobNotificationList","editing","notificationList","handleApprovalSubmit","updateList","handleClick","newAlert","renderList","openEdit","renderJobEdit","jobKey","renderEmployeeNotificationDetails","renderPromoted","dismissPromoted","renderJobList","pathname","OwnerNotification","newEmployees","newProjects","handleNewEmployee","updateProjectList","renderNewEmployees","renderNewProjects","renderCompletedProjects","JobNotification","notificationCount","notificationDropDown","getProjects","projectList","populateNotificationList","jobsList","newCount","completed","newNotifications","updateNewEmployees","empObj","updatedNewEmployees","projObj","list","updatedCompletedProjects","updatedNewProjects","Header","showRole","handleLogout","setPath","localStorage","removeItem","auth","signOut","src","lazy","renderLogoutLink","renderLoginLink","withRouter","history","handleLogin","useCallback","elements","signInWithEmailAndPassword","code","functions","orgList","setOrgList","setRole","orgs","getOrgs","changeRole","httpsCallable","registerOwner","registerWorker","registerProjectManager","info","displayName","infoNoPass","checked","hidden","i","WorkerEditForm","setSubmitted","editObj","parseInt","handleStatus","renderEditForm","message","LogHours","initialValue","setValue","reset","bind","useInput","bindHours","resetHours","submitted","newHours","employeeHoursObj","newEmpHours","renderLogHoursForm","handleJobHoursSubmit","min","max","selectedJob","getMaxHours","hoursWorked","hoursNeeded","renderJobHours","JobItem","deleteTask","renderEmployeeList","jobWorkers","itemKey","expandJob","showEditForm","submitEditForm","submitLogHours","showLogHours","showWorkerEditForm","submitWorkerEdit","employeeHoursArr","labels","every","employeeHours","datasets","backgroundColor","responsive","maintainAspectRatio","display","fontSize","legend","renderProjectButtons","renderChart","Jobs","onJobsUpdate","querySnapshot","grabProgress","totalHours","totalProgress","getProgress","unsubscribe","Statistics","jobDue","getDate","jobHistory","populateStats","Array","jobDueCount","jobHistoryCount","docs","updated","turnOffUpdate","componentDidMount","scales","yAxes","ticks","beginAtZero","callback","xAxes","ProjectView","jobProg","jobTotal","currentProgress","currentTotal","total","toFixed","approveProject","expandJobs","submitJobForm","statsUpdated","expandStats","toggleState","test-data","setJob","LandingPage","PrivateRoute","RouteComponent","component","rest","render","routeProps","PublicRoute","isMounted","userInfo","setUserInfo","userProjects","setUserProjects","workerProjects","setWorkerProjects","setExpandPersonnel","getUserInfo","match","params","getUserProjects","promoteFunc","CatchAll","skyscraper","getItem","path","setItem","userName","exact","Login","library","faAngleRight","faAngleLeft","faAngleDown","faChevronUp","faChevronDown","faEdit","faClipboardList","faUserEdit","faTrashAlt","ReactDOM","children","setCurrentUser","onAuthStateChanged","getIdTokenResult","idTokenResult","claims","Provider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.df7f69ec.chunk.js","sourcesContent":["import * as firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/functions'\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n})\r\n\r\nexport default app\r\n","import React, { useEffect, useState } from 'react'\r\nimport app from './base'\r\n\r\nexport const AuthContext = React.createContext()\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null)\r\n  useEffect(() => {\r\n    app.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        app\r\n          .auth()\r\n          .currentUser.getIdTokenResult()\r\n          .then(idTokenResult => {\r\n            if (!!idTokenResult.claims) {\r\n              setCurrentUser(idTokenResult.claims)\r\n            } else {\r\n              alert('ruh roh')\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.warn(error)\r\n          })\r\n      } else {\r\n        setCurrentUser(null)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n","import app from './base'\r\nconst db = app.firestore()\r\n\r\nconst dbServices = {\r\n  createOwner(user, org) {\r\n    const addOrg = async () =>\r\n      await db\r\n        .collection('organizations')\r\n        .doc(org)\r\n        .set({\r\n          name: org,\r\n        })\r\n    user.role = 'owner'\r\n    addOrg().then(() => this.createUserInOrg(user, org))\r\n    return 'success'\r\n  },\r\n\r\n  async getAllOrgs() {\r\n    return db.collection('organizations').get()\r\n  },\r\n\r\n  createUserInOrg(newUser, org) {\r\n    newUser.new = true\r\n    const orgRef = db.collection('organizations').doc(org)\r\n\r\n    return orgRef.get().then(docSnapshot => {\r\n      if (docSnapshot.exists) {\r\n        return orgRef.onSnapshot(() => {\r\n          orgRef\r\n            .collection('users')\r\n            .doc(newUser.email)\r\n            .set(newUser)\r\n        })\r\n      } else throw new Error('org not found')\r\n    })\r\n  },\r\n\r\n  jobsListener(org, id) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .doc(id)\r\n      .collection('jobs')\r\n  },\r\n\r\n  promoteUser(org, email) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('users')\r\n      .doc(email)\r\n      .update({ role: 'project manager', promoted: true })\r\n  },\r\n\r\n  projectsListener(org, id) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .doc(id)\r\n  },\r\n\r\n  async getEmployeeProjects(name, org) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .where('project_workers', 'array-contains', name)\r\n      .get()\r\n  },\r\n\r\n  async getManagerProjects(name, org) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .where('project_manager', '==', name)\r\n      .get()\r\n  },\r\n\r\n  async getProjectJobsForEmployee(name, org, id) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .doc(id)\r\n      .collection('jobs')\r\n      .where('project_workers', 'array-contains', name)\r\n      .get()\r\n  },\r\n\r\n  async initDashboard(name, role, org) {\r\n    const projs = []\r\n    const managers = []\r\n\r\n    //get projects\r\n    const projects = await dbServices.getProjectsByRole({\r\n      name: name,\r\n      org: org,\r\n      role: role,\r\n    })\r\n\r\n    projects.forEach(proj => projs.push(proj.data()))\r\n\r\n    //get projectManagers\r\n    if (role === 'owner') {\r\n      const PMs = await dbServices.getProjectManagers(org)\r\n      PMs.forEach(pm => managers.push(pm.data()))\r\n    }\r\n\r\n    return {\r\n      name: name,\r\n      role: role,\r\n      projects: projs,\r\n      project_managers: managers,\r\n    }\r\n  },\r\n\r\n  getProjectsByRole(user) {\r\n    if (user.role === 'project worker') {\r\n      return db\r\n        .collection('organizations')\r\n        .doc(user.org)\r\n        .collection('projects')\r\n        .where('project_workers', 'array-contains', user.name)\r\n        .get()\r\n    }\r\n    if (user.role === 'project manager') {\r\n      return db\r\n        .collection('organizations')\r\n        .doc(user.org)\r\n        .collection('projects')\r\n        .where('project_manager', '==', user.name)\r\n        .get()\r\n    }\r\n    return db\r\n      .collection('organizations')\r\n      .doc(user.org)\r\n      .collection('projects')\r\n      .get()\r\n  },\r\n\r\n  getProjectById(id, org) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .doc(id)\r\n      .get()\r\n  },\r\n\r\n  deleteProjectById(id, org) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .doc(id)\r\n      .delete()\r\n  },\r\n\r\n  deleteJobById(id, projectId, org) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .doc(projectId)\r\n      .collection('jobs')\r\n      .doc(id)\r\n      .delete()\r\n  },\r\n\r\n  addProject(newProject) {\r\n    if (!newProject.project_manager) newProject.project_manager = 'unassigned'\r\n    return db\r\n      .collection(`organizations/${newProject.org_id}/projects`)\r\n      .add(newProject)\r\n  },\r\n\r\n  setProjId(id, orgId) {\r\n    return db\r\n      .collection(`organizations/${orgId}/projects`)\r\n      .doc(`${id}`)\r\n      .update({ id: id })\r\n  },\r\n\r\n  updateProject(proj) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(proj.org_id)\r\n      .collection('projects')\r\n      .doc(proj.id)\r\n      .update(proj)\r\n  },\r\n\r\n  setProjectsManager(projId, org, pm) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .doc(projId)\r\n      .update({ project_manager: pm })\r\n  },\r\n\r\n  getUser(email, org) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('users')\r\n      .where('email', '==', email)\r\n      .get()\r\n  },\r\n\r\n  // getPeople(org, type) {\r\n  //   return db\r\n  //     .collection('organizations')\r\n  //     .doc(org)\r\n  //     .collection('users')\r\n  //     .where('role', '==', type)\r\n  //     .getString('name');\r\n  // },\r\n\r\n  async getJobs(org, id) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .doc(id)\r\n      .collection('jobs')\r\n      .get()\r\n  },\r\n\r\n  async getEmployees(org) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('users')\r\n      .where('role', '==', 'project worker')\r\n      .get()\r\n  },\r\n\r\n  getProjectManagers(org) {\r\n    return db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('users')\r\n      .where('role', '==', 'project manager')\r\n      .get()\r\n  },\r\n\r\n  async addJob(newJob, project_id) {\r\n    await db\r\n      .collection(\r\n        `organizations/${newJob.organization}/projects/${project_id}/jobs`\r\n      )\r\n      .add(newJob)\r\n      .catch(error => {\r\n        return error\r\n      })\r\n      .then(function(docRef) {\r\n        db.collection(\r\n          `organizations/${newJob.organization}/projects/${project_id}/jobs`\r\n        )\r\n          .doc(`${docRef.id}`)\r\n          .update({ id: docRef.id })\r\n          .catch(error => {\r\n            return error\r\n          })\r\n      })\r\n  },\r\n\r\n  async updateEdit(edit, id, project_id, org) {\r\n    await db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .doc(project_id)\r\n      .collection('jobs')\r\n      .doc(id)\r\n      .update({ edit: edit })\r\n  },\r\n\r\n  async updateJobAlert(jobObj) {\r\n    await db\r\n      .collection('organizations')\r\n      .doc(jobObj.organization)\r\n      .collection('projects')\r\n      .doc(jobObj.project_id)\r\n      .collection('jobs')\r\n      .doc(jobObj.id)\r\n      .update({ alert: jobObj.alert })\r\n  },\r\n\r\n  async updateProjectWorkers(id, workers, org) {\r\n    await db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .doc(id)\r\n      .update({ project_workers: workers })\r\n  },\r\n\r\n  async updateJob(jobObj) {\r\n    await db\r\n      .collection('organizations')\r\n      .doc(jobObj.organization)\r\n      .collection('projects')\r\n      .doc(jobObj.project_id)\r\n      .collection('jobs')\r\n      .doc(jobObj.id)\r\n      .update({ ...jobObj })\r\n  },\r\n\r\n  async updateJobStatus(id, status, project_id, approval, org, date_completed) {\r\n    await db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('projects')\r\n      .doc(project_id)\r\n      .collection('jobs')\r\n      .doc(id)\r\n      .update({\r\n        status: status,\r\n        approval: approval,\r\n        date_completed: date_completed,\r\n      })\r\n  },\r\n\r\n  async updateJobApproval(id, project_id) {\r\n    await db\r\n      .collection('organizations')\r\n      .doc(this.state.user.org)\r\n      .collection('projects')\r\n      .doc(project_id)\r\n      .collection('job')\r\n      .doc(id)\r\n      .update({ approval: true, status: 'complete' })\r\n  },\r\n\r\n  async editJob(id, jobObj) {\r\n    await db\r\n      .collection('organizations')\r\n      .doc(jobObj.organization)\r\n      .collection('projects')\r\n      .doc(jobObj.project_id)\r\n      .collection('jobs')\r\n      .doc(id)\r\n      .update(jobObj)\r\n  },\r\n\r\n  async updateAndSetJobs(id, status, approval) {\r\n    let index = this.state.jobs.findIndex(job => job.id === id)\r\n    let newArray = this.state.jobs\r\n    newArray[index].status = status\r\n    newArray[index].approval = approval\r\n    this.setState({\r\n      jobs: newArray,\r\n    })\r\n  },\r\n\r\n  async editAndSetJobs(id, jobObj) {\r\n    let index = this.state.jobs.findIndex(job => job.id === id)\r\n    let newArray = this.state.jobs\r\n    newArray[index] = jobObj\r\n    this.setState({\r\n      jobs: newArray,\r\n    })\r\n  },\r\n\r\n  async updateWorker(worker, org) {\r\n    await db\r\n      .collection('organizations')\r\n      .doc(org)\r\n      .collection('users')\r\n      .doc(worker.email)\r\n      .update({ ...worker })\r\n  },\r\n\r\n  async updatePromoted(worker) {\r\n    await db\r\n      .collection('organizations')\r\n      .doc(worker.org)\r\n      .collection('users')\r\n      .doc(worker.email)\r\n      .update({ promoted: false })\r\n  },\r\n}\r\n\r\nexport default dbServices\r\n","import React from 'react'\r\nimport ReactLoading from 'react-loading'\r\nimport './Loading.css'\r\n\r\nexport default function Loading(props) {\r\n  return (\r\n    <div className=\"Loading\">\r\n      <ReactLoading\r\n        type={'spokes'}\r\n        color={'#3b59ff'}\r\n        height={125}\r\n        width={125}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst useFormValidation = (initialState, validate, runOnSubmit) => {\r\n  const [values, setValues] = useState(initialState)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const [touched, setTouched] = useState([])\r\n  const [isSubmitting, setSubmitting] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (isSubmitting) {\r\n      const noErrors = Object.keys(errors).length === 0\r\n      if (noErrors) {\r\n        setTouched([])\r\n        runOnSubmit()\r\n        setSubmitting(false)\r\n      } else {\r\n        setSubmitting(false)\r\n      }\r\n    }\r\n  }, [errors, isSubmitting, runOnSubmit])\r\n\r\n  useEffect(() => {\r\n    const validationErrors = validate(values)\r\n    const touchedErrors = Object.keys(validationErrors)\r\n      .filter(key => touched.includes(key))\r\n      .reduce((acc, key) => {\r\n        if (!acc[key]) {\r\n          acc[key] = validationErrors[key]\r\n        }\r\n        return acc\r\n      }, {})\r\n    setErrors(touchedErrors)\r\n  }, [touched, values, validate])\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n  const handleBlur = event => {\r\n    if (!touched.includes(event.target.name)) {\r\n      setTouched([...touched, event.target.name])\r\n    }\r\n  }\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    const validationErrors = validate(values)\r\n    setErrors(validationErrors)\r\n    setSubmitting(true)\r\n  }\r\n\r\n  return {\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    errors,\r\n    isSubmitting,\r\n  }\r\n}\r\n\r\nexport default useFormValidation\r\n","import * as firebase from 'firebase/app'\r\nimport React from 'react'\r\n\r\nconst dateConversions = {\r\n  //Convert <input type='date'> format to firestore timestamp\r\n  dateToTimestamp(date) {\r\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset())\r\n    return firebase.firestore.Timestamp.fromDate(new Date(date))\r\n  },\r\n\r\n  //Convert firestore timestamp to <input type='date'> format\r\n  TStoFormDate(ts) {\r\n    const date = ts.toDate()\r\n    date.setMinutes(date.getMinutes() - date.getTimezoneOffset())\r\n\r\n    return date.toJSON().slice(0, 10)\r\n  },\r\n\r\n  //Convert firestore timestamp to display format\r\n  TStoDisplayDate(ts) {\r\n    const date = ts.toDate()\r\n    date.setMinutes(date.getMinutes() - date.getTimezoneOffset())\r\n    const year = date.getFullYear()\r\n    const month = ('0' + (date.getMonth() + 1)).slice(-2)\r\n    const day = date.toJSON().slice(8, 10)\r\n\r\n    return `${month}/${day}/${year}`\r\n  },\r\n\r\n  //get the number of days overdue\r\n  dateDiff(deadline) {\r\n    let currDate = new Date()\r\n    let dueDate = new Date(deadline.seconds * 1000)\r\n\r\n    if (currDate > dueDate) {\r\n      let res = Math.abs(currDate - dueDate) / 1000\r\n      let days = Math.floor(res / 86400)\r\n      return <h2>Overdue by {days + 1} day(s)</h2>\r\n    } else if (currDate < dueDate) {\r\n      let res = Math.abs(currDate - dueDate) / 1000\r\n      let days = Math.floor(res / 86400)\r\n      if (days + 1 === 0) {\r\n        return <h2>Due Today</h2>\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  },\r\n}\r\n\r\nexport default dateConversions\r\n","import dateConversions from '../services/dateConversions'\r\n\r\nconst validateInput = {\r\n  validateJobForm(values) {\r\n    let errors = {}\r\n\r\n    if (!values.name) {\r\n      errors.name = 'Task name is required'\r\n    }\r\n\r\n    if (values.name && (values.name.length === 0 || !values.name.trim())) {\r\n      errors.name = 'Task name is required'\r\n    }\r\n\r\n    if (!values.description) {\r\n      errors.description = 'Description is required'\r\n    }\r\n\r\n    if (\r\n      values.description &&\r\n      (values.description.length === 0 || !values.description.trim())\r\n    ) {\r\n      errors.description = 'Description is required'\r\n    }\r\n\r\n    if (!values.total_hours) {\r\n      errors.total_hours = 'Total hours is required'\r\n    }\r\n\r\n    if (!values.deadline) {\r\n      errors.deadline = 'Deadline is required'\r\n    }\r\n\r\n    if (values.deadline && new Date() > new Date(values.deadline)) {\r\n      errors.deadline = 'Deadline must be in the future'\r\n    }\r\n\r\n    return errors\r\n  },\r\n\r\n  validateLogin(values) {\r\n    let errors = {}\r\n\r\n    if (!values.email) {\r\n      errors.email = 'Please enter your email'\r\n    }\r\n    if (!values.password) {\r\n      errors.password = 'Please enter your password'\r\n    }\r\n\r\n    return errors\r\n  },\r\n\r\n  validateSignup(values) {\r\n    let errors = {}\r\n    let passRegex = new RegExp(\r\n      '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})'\r\n    )\r\n\r\n    if (!values.email) {\r\n      errors.email = 'Please enter your email'\r\n    }\r\n    if (\r\n      values.email &&\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z].{2,}$/i.test(values.email)\r\n    ) {\r\n      errors.email = 'Please enter a valid email address'\r\n    }\r\n\r\n    if (!values.password) {\r\n      errors.password = 'Please enter a password'\r\n    }\r\n    if (values.password && !passRegex.test(values.password)) {\r\n      errors.password =\r\n        'Password must be eight characters or longer and contain at least 1 lowercase, 1 uppercase, 1 numeric, and one special character'\r\n    }\r\n\r\n    if (!values.name) {\r\n      errors.name = 'Please enter a username'\r\n    }\r\n\r\n    if (!values.orgName) {\r\n      errors.orgName = 'Please enter an organization name'\r\n    }\r\n\r\n    return errors\r\n  },\r\n\r\n  validateProjectForm(values) {\r\n    let errors = {}\r\n\r\n    if (!values.name) {\r\n      errors.name = 'Project name is required'\r\n    }\r\n    if (values.name && (values.name.length === 0 || !values.name.trim())) {\r\n      errors.name = 'Project name is required'\r\n    }\r\n\r\n    if (!values.description) {\r\n      errors.description = 'Description is required'\r\n    }\r\n    if (\r\n      values.description &&\r\n      (values.description.length === 0 || !values.description.trim())\r\n    ) {\r\n      errors.description = 'Description is required'\r\n    }\r\n\r\n    if (!values.deadline) {\r\n      errors.deadline = 'Deadline is required'\r\n    }\r\n    if (\r\n      values.deadline &&\r\n      Math.floor(Date.now() / 1000) >\r\n        dateConversions.dateToTimestamp(new Date(values.deadline)).seconds\r\n    ) {\r\n      errors.deadline = 'Deadline must be in the future'\r\n    }\r\n\r\n    return errors\r\n  },\r\n\r\n  validateWorkerEditForm(values) {\r\n    let errors = {}\r\n\r\n    if (!values.note) {\r\n      errors.note = 'A note is required'\r\n    }\r\n    if (values.note && (values.note.length === 0 || !values.note.trim())) {\r\n      errors.note = 'Description is required'\r\n    }\r\n\r\n    return errors\r\n  },\r\n}\r\n\r\nexport default validateInput\r\n","import React from 'react'\r\nimport cx from 'classnames'\r\nimport './Form.css'\r\n\r\nexport function Label({ className, ...props }) {\r\n  return <label className={cx('Label', className)} {...props} />\r\n}\r\n\r\nexport const Input = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <input\r\n      className={cx('Input', className)}\r\n      type=\"text\"\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\n\r\nexport function Required({ className, ...props }) {\r\n  return (\r\n    <span className={cx('Required', className)} {...props}>\r\n      &#42;\r\n    </span>\r\n  )\r\n}\r\n\r\nexport function Textarea({ className, ...props }) {\r\n  return <textarea className={cx('Textarea', className)} {...props} />\r\n}\r\n","import React, { Component } from 'react'\r\nimport Select from 'react-select'\r\nimport { AuthContext } from '../../services/Auth'\r\nimport dbServices from '../../services/dbServices'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default class Dropdown extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      selectedOption: null,\r\n      employees: [],\r\n    }\r\n  }\r\n\r\n  static contextType = AuthContext\r\n\r\n  async componentDidMount() {\r\n    let employees = []\r\n\r\n    if (this.props.pm) {\r\n      await dbServices\r\n        .getProjectManagers(this.context.currentUser.org)\r\n        .then(snapshot => {\r\n          snapshot.forEach(doc => {\r\n            employees.push(doc.data().name)\r\n          })\r\n        })\r\n        .catch(error => {\r\n          console.warn(error)\r\n          Swal.fire({\r\n            title: 'Error!',\r\n            text: 'There was an issue - please refresh the page and try again.',\r\n            icon: 'error',\r\n            confirmButtonText: 'Close',\r\n          })\r\n        })\r\n    }\r\n\r\n    if (!this.props.pm) {\r\n      await dbServices\r\n        .getEmployees(this.context.currentUser.org)\r\n        .then(snapshot => {\r\n          snapshot.forEach(doc => {\r\n            employees.push(doc.data().name)\r\n          })\r\n        })\r\n        .catch(error => {\r\n          console.warn(error)\r\n          Swal.fire({\r\n            title: 'Error!',\r\n            text: 'There was an issue - please refresh the page and try again.',\r\n            icon: 'error',\r\n            confirmButtonText: 'Close',\r\n          })\r\n        })\r\n    }\r\n\r\n    this.setState({ employees })\r\n\r\n    if (this.props.defaultValue) {\r\n      this.setState({\r\n        selectedOption: this.props.defaultValue,\r\n      })\r\n      this.props.setSelected(this.props.defaultValue)\r\n    }\r\n  }\r\n\r\n  handleChange = selectedOption => {\r\n    this.setState({ selectedOption })\r\n    this.props.setSelected(selectedOption)\r\n  }\r\n\r\n  populateOptions = array => {\r\n    let selectArray = []\r\n    array.map(name => {\r\n      let newObj = { value: name, label: name }\r\n      return selectArray.push(newObj)\r\n    })\r\n    return selectArray\r\n  }\r\n\r\n  render() {\r\n    const { selectedOption, employees } = this.state\r\n    return (\r\n      <Select\r\n        className=\"select\"\r\n        value={selectedOption}\r\n        onChange={this.handleChange}\r\n        options={this.populateOptions(employees)}\r\n        isMulti={this.props.isMulti ? true : false}\r\n        isSearchable={true}\r\n        defaultValue={this.props.defaultValue ? this.props.defaultValue : false}\r\n        placeholder={\r\n          this.props.placeholder ? this.props.placeholder : 'Select...'\r\n        }\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport useFormValidation from '../../../hooks/useFormValidation'\r\nimport validateInput from '../../../hooks/validateInput'\r\nimport { Input, Label, Textarea } from '../../Form/Form'\r\nimport dbServices from '../../../services/dbServices'\r\nimport dateConversions from '../../../services/dateConversions'\r\nimport Dropdown from '../../Dropdown/Dropdown'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst ProjectForm = props => {\r\n  const [error, setError] = useState(false)\r\n  const proj = props.proj\r\n  const [selected, setSelected] = useState(0)\r\n\r\n  const INITIAL_STATE = {\r\n    name: proj ? proj.name : '',\r\n    description: proj ? proj.description : '',\r\n    deadline: proj ? dateConversions.TStoFormDate(props.proj.deadline) : '',\r\n  }\r\n\r\n  const handleSubmitForm = async () => {\r\n    const { name, description, deadline } = values\r\n    let id = null\r\n    if (props.proj) id = props.proj.id\r\n    const data = {\r\n      alert: true,\r\n      name: name,\r\n      description: description,\r\n      project_manager: selected.value || 'Unassigned',\r\n      deadline: dateConversions.dateToTimestamp(new Date(deadline)),\r\n      date_created: dateConversions.dateToTimestamp(new Date()),\r\n      org_id: props.org,\r\n      progress: 0,\r\n      project_workers: [],\r\n      id: id,\r\n    }\r\n    try {\r\n      if (!props.proj) {\r\n        const docRef = await dbServices.addProject(data)\r\n        await dbServices.setProjId(docRef.id, data.org_id)\r\n        props.addToProjState({ ...data, id: docRef.id })\r\n      } else {\r\n        data.alert = false\r\n        await dbServices.updateProject(data)\r\n        props.updateProjInState({ ...data })\r\n        props.toggleForm()\r\n      }\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text: 'Project failed to post!',\r\n        icon: 'error',\r\n        confirmButtonText: 'Close',\r\n        onClose: setError(true),\r\n      })\r\n    }\r\n  }\r\n\r\n  const {\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    errors,\r\n  } = useFormValidation(\r\n    INITIAL_STATE,\r\n    validateInput.validateProjectForm,\r\n    handleSubmitForm\r\n  )\r\n  if (error) return null\r\n  return (\r\n    <form className=\"Form\" onSubmit={handleSubmit}>\r\n      <legend>{props.proj ? 'Update Project' : 'New Project'}</legend>\r\n      {errors.name && <span className=\"error\">{errors.name}</span>}\r\n      <Label htmlFor=\"project_name\">Name</Label>\r\n      <Input\r\n        name=\"name\"\r\n        id=\"project_name\"\r\n        test-id=\"project_name\"\r\n        type=\"text\"\r\n        placeholder=\"Project Name\"\r\n        onChange={handleChange}\r\n        value={values.name}\r\n        onBlur={handleBlur}\r\n        required\r\n      />\r\n      {errors.description && (\r\n        <span className=\"error\">{errors.description}</span>\r\n      )}\r\n      <Label htmlFor=\"project_description\">Description</Label>\r\n      <Textarea\r\n        name=\"description\"\r\n        id=\"project_description\"\r\n        test-id=\"project_desc\"\r\n        type=\"text\"\r\n        placeholder=\"Project Description\"\r\n        onChange={handleChange}\r\n        value={values.description}\r\n        onBlur={handleBlur}\r\n      />\r\n      <Label htmlFor=\"project_manager\">Project Manager</Label>\r\n      <Dropdown\r\n        id=\"project_manager\"\r\n        test-id=\"project_man\"\r\n        pm={true}\r\n        isMulti={false}\r\n        setSelected={setSelected}\r\n        defaultValue={\r\n          proj && { value: 'project_manager', label: proj.project_manager }\r\n        }\r\n      />\r\n      {errors.deadline && <span className=\"error\">{errors.deadline}</span>}\r\n      <Label htmlFor=\"project_deadline\">Deadline</Label>\r\n      <input\r\n        name=\"deadline\"\r\n        id=\"project_deadline\"\r\n        test-id=\"project_deadline\"\r\n        type=\"date\"\r\n        onChange={handleChange}\r\n        value={values.deadline}\r\n        onBlur={handleBlur}\r\n      />\r\n      <button\r\n        test-id=\"project-submit\"\r\n        className=\"btn_highlight_color\"\r\n        type=\"submit\"\r\n      >\r\n        Submit\r\n      </button>\r\n      <button className=\"btn_secondary_color\" onClick={props.toggleForm}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default ProjectForm\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faMinus,\r\n  faPlus,\r\n  faTimesCircle,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport {\r\n  faCalendarCheck,\r\n  faCheckSquare,\r\n  faClock,\r\n  faArrowAltCircleUp,\r\n} from '@fortawesome/free-regular-svg-icons'\r\n\r\nconst styleIconMap = {\r\n  delete: <FontAwesomeIcon className=\"fa_trash\" icon=\"trash-alt\" />,\r\n  requestEdit: <FontAwesomeIcon className=\"fa_user_edit\" icon=\"user-edit\" />,\r\n  revise: (\r\n    <FontAwesomeIcon className=\"fa_clipboard_list\" icon=\"clipboard-list\" />\r\n  ),\r\n  submit: <FontAwesomeIcon className=\"fa_arrow_up\" icon={faArrowAltCircleUp} />,\r\n  clock: <FontAwesomeIcon className=\"fa_clock\" icon={faClock} />,\r\n  left: <FontAwesomeIcon className=\"fa_angle_left\" icon=\"angle-left\" />,\r\n  collapse: <FontAwesomeIcon className=\"fa_angle_right\" icon=\"angle-right\" />,\r\n  complete: (\r\n    <FontAwesomeIcon className=\"fa_calendar_check\" icon={faCalendarCheck} />\r\n  ),\r\n  approve: <FontAwesomeIcon className=\"fa_check_square\" icon={faCheckSquare} />,\r\n  close: <FontAwesomeIcon className=\"fa_close\" icon={faTimesCircle} />,\r\n  plus: <FontAwesomeIcon className=\"fa_plus\" icon={faPlus} />,\r\n  minus: <FontAwesomeIcon className=\"fa_minus\" icon={faMinus} />,\r\n  expand: <FontAwesomeIcon className=\"fa_expand\" icon=\"angle-down\" />,\r\n\r\n  edit: <FontAwesomeIcon className=\"fa_edit\" icon=\"edit\" />,\r\n  collapseBig: <FontAwesomeIcon icon=\"chevron-up\" />,\r\n  expandBig: <FontAwesomeIcon icon=\"chevron-down\" />,\r\n  default: null,\r\n}\r\n\r\nexport default function StyleIcon({ style = 'default' }) {\r\n  return styleIconMap[style]\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { AuthContext } from '../../services/Auth'\r\nimport dbServices from '../../services/dbServices'\r\nimport { Link } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nimport StyleIcon from '../StyleIcon/StyleIcon'\r\nimport './Sidebar.css'\r\n\r\nconst Sidebar = props => {\r\n  let [employeeList, setEmployeeList] = useState([])\r\n  let [pmList, setPMList] = useState([])\r\n  let [expanded, setExpanded] = useState([])\r\n  let [clicked, setClick] = useState(false)\r\n  let [error, setError] = useState(false)\r\n  const { currentUser } = useContext(AuthContext)\r\n\r\n  if (clicked === true) setClick(false)\r\n\r\n  const toggleExpand = section => {\r\n    setClick(true)\r\n    let newExpanded = []\r\n    if (!expanded.includes(section)) {\r\n      newExpanded = expanded\r\n      newExpanded.push(section)\r\n      setExpanded(newExpanded)\r\n    } else {\r\n      newExpanded = expanded.filter(item => item !== section)\r\n      setExpanded(newExpanded)\r\n    }\r\n    return expanded\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getEmployees = async () => {\r\n      let employees = []\r\n      try {\r\n        return await dbServices.getEmployees(currentUser.org).then(snapshot => {\r\n          snapshot.forEach(doc => {\r\n            employees.push(doc.data())\r\n          })\r\n          return employees\r\n        })\r\n      } catch (error) {\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text: 'Employees failed to load. Sidebar temporarily disabled.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n          onClose: setError(true),\r\n        })\r\n      }\r\n    }\r\n\r\n    const getPMs = async () => {\r\n      let pms = []\r\n      try {\r\n        return await dbServices\r\n          .getProjectManagers(currentUser.org)\r\n          .then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n              pms.push(doc.data())\r\n            })\r\n            return pms\r\n          })\r\n      } catch (error) {\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text: 'Employees failed to load. Sidebar temporarily disabled.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n          onClose: setError(true),\r\n        })\r\n      }\r\n    }\r\n    getEmployees().then(employees => {\r\n      setEmployeeList(employees)\r\n    })\r\n    getPMs().then(pms => {\r\n      setPMList(pms)\r\n    })\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const renderProjectManagers = () => {\r\n    return pmList.map((pm, index) => {\r\n      return (\r\n        <li key={pm.name + index}>\r\n          <Link to={`/profile/${pm.email}`}>{pm.name}</Link>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  const renderEmployees = () => {\r\n    return employeeList.map((emp, index) => {\r\n      return (\r\n        <li key={emp.name + index}>\r\n          <Link to={`/profile/${emp.email}`}>{emp.name}</Link>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  if (error) return null\r\n  else\r\n    return (\r\n      <div className=\"Sidebar\">\r\n        <h3>\r\n          <div\r\n            className=\"Sidebar__PM_header\"\r\n            onClick={() => toggleExpand('pm')}\r\n          >\r\n            {StyleIcon({\r\n              style: `${!expanded.includes('pm') ? 'expand' : 'collapse'}`,\r\n            })}\r\n            Project Managers\r\n          </div>\r\n        </h3>\r\n        {!expanded.includes('pm') ? (\r\n          <ul className=\"Sidebar__list\">{renderProjectManagers()}</ul>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <h3>\r\n          <div\r\n            className=\"Sidebar__emp_header\"\r\n            onClick={() => toggleExpand('employees')}\r\n          >\r\n            {StyleIcon({\r\n              style: `${\r\n                !expanded.includes('employees') ? 'expand' : 'collapse'\r\n              }`,\r\n            })}\r\n            Employees\r\n          </div>\r\n        </h3>\r\n        {!expanded.includes('employees') ? (\r\n          <ul className=\"Sidebar__list\">{renderEmployees()}</ul>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport './ProgressBar.css'\r\n\r\nexport const ProgressBar = props => {\r\n  return (\r\n    <div className=\"ProgressBar__meter\">\r\n      <span\r\n        className=\"ProgressBar__fill\"\r\n        style={{ width: props.percentage + '%' }}\r\n      ></span>\r\n      <span className=\"ProgressBar__text\">{props.percentage}%</span>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport dbServices from '../../../services/dbServices'\r\nimport dateConversions from '../../../services/dateConversions'\r\nimport { ProgressBar } from '../../ProgressBar/ProgressBar'\r\nimport ProjectForm from '../ProjectForm/ProjectForm'\r\nimport StyleIcon from '../../StyleIcon/StyleIcon'\r\nimport Swal from 'sweetalert2'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport './ProjectBar.css'\r\n\r\nconst ProjectBar = props => {\r\n  const [edit, setEdit] = useState(false)\r\n\r\n  const toggleEdit = () => {\r\n    setEdit(!edit)\r\n  }\r\n\r\n  const approveProject = async () => {\r\n    let proj = { ...props.proj, date_completed: null }\r\n    proj.date_completed = dateConversions.dateToTimestamp(new Date())\r\n    proj.alert = true\r\n    await dbServices.updateProject(proj)\r\n    if (window.location.href.includes('dashboard'))\r\n      props.updateProjInState(proj)\r\n  }\r\n\r\n  const autoComplete = () => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text:\r\n        'By clicking the button below, you will automatically mark this project as complete along with any unfinished tasks.',\r\n      icon: 'question',\r\n      confirmButtonText: \"I'm sure!\",\r\n      showCancelButton: true,\r\n    }).then(value => {\r\n      if (value.dismiss === 'cancel') return null\r\n      else {\r\n        let proj = props.proj\r\n        proj.autoComplete = true\r\n        proj.alert = true\r\n        proj.date_completed = dateConversions.dateToTimestamp(new Date())\r\n        dbServices.updateProject(proj)\r\n        if (window.location.href.includes('dashboard')) {\r\n          props.updateProjInState(proj)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const deleteProject = () => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text:\r\n        'By clicking the button below, you will be deleting this project and all associated tasks.',\r\n      icon: 'question',\r\n      confirmButtonText: \"I'm sure!\",\r\n      showCancelButton: true,\r\n    }).then(value => {\r\n      if (value.dismiss === 'cancel') return null\r\n      else {\r\n        let id = props.proj.id\r\n        let org = props.proj.org_id\r\n        let complete = props.proj.date_completed\r\n\r\n        if (props.view === 'project') {\r\n          dbServices.deleteProjectById(id, org)\r\n        }\r\n\r\n        if (props.view === 'dashboard') {\r\n          dbServices.deleteProjectById(id, org).then(() => {\r\n            if (complete) {\r\n              props.deleteProjInState(id, 'complete')\r\n            } else {\r\n              props.deleteProjInState(id, 'incomplete')\r\n            }\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"ProjectBar__project_container\">\r\n      <Link\r\n        className=\"ProjectBar__link_wrapper\"\r\n        to={`/project/${props.proj.id}`}\r\n        key={props.proj.id}\r\n      >\r\n        <div className=\"ProjectBar__header\">\r\n          <span className=\"ProjectBar__proj_name\" test-id=\"project-link\">\r\n            {props.proj.name}\r\n          </span>\r\n          <span className=\"ProjectBar__proj_mgr\">\r\n            Manager: {props.proj.project_manager}\r\n          </span>\r\n        </div>\r\n        <div className=\"ProjectBar__description\">\r\n          <span>Description:</span>\r\n          <div className=\"ProjectBar__description_text\">\r\n            {props.proj.description}\r\n          </div>\r\n        </div>\r\n        <div className=\"ProjectBar__proj_prog_date\">\r\n          {props.proj.date_completed ? (\r\n            <p>\r\n              Project Completed on{' '}\r\n              {props.proj.date_completed &&\r\n                dateConversions.TStoDisplayDate(props.proj.date_completed)}\r\n            </p>\r\n          ) : (\r\n            <>\r\n              <div className=\"ProjectBar__proj_prog\">\r\n                Est. Progress <ProgressBar percentage={props.proj.progress} />\r\n              </div>\r\n              <div className=\"ProjectBar__deadline\">\r\n                <div>\r\n                  <span className=\"ProjectBar__deadline_first\">Deadline:</span>\r\n                  <span className=\"ProjectBar__deadline_second\">\r\n                    {dateConversions.TStoDisplayDate(props.proj.deadline)}\r\n                  </span>\r\n                </div>\r\n                <span className=\"ProjectBar__overdue\">\r\n                  {props.proj.progress !== 100 &&\r\n                    dateConversions.dateDiff(props.proj.deadline) &&\r\n                    dateConversions.dateDiff(props.proj.deadline)}\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </Link>\r\n      {props.role !== 'project worker' && (\r\n        <div className=\"ProjectBar__buttons\">\r\n          <div\r\n            className=\"ProjectBar__fa\"\r\n            data-tip=\"Delete Project\"\r\n            onClick={deleteProject}\r\n          >\r\n            {StyleIcon({ style: 'delete' })}\r\n          </div>\r\n          {props.role === 'owner' && (\r\n            <div\r\n              className=\"ProjectBar__fa\"\r\n              onClick={toggleEdit}\r\n              data-tip=\"Edit Project\"\r\n            >\r\n              {StyleIcon({ style: 'edit' })}\r\n            </div>\r\n          )}\r\n          {props.proj.date_completed ? (\r\n            <></>\r\n          ) : (\r\n            <div>\r\n              {!props.proj.autoComplete && props.proj.progress !== 100 ? (\r\n                <>\r\n                  <div\r\n                    className=\"ProjectBar__fa\"\r\n                    onClick={autoComplete}\r\n                    data-tip=\"Mark Complete\"\r\n                  >\r\n                    {StyleIcon({ style: 'complete' })}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div\r\n                  className=\"ProjectBar__fa\"\r\n                  onClick={approveProject}\r\n                  data-tip=\"Approve Project\"\r\n                >\r\n                  {StyleIcon({ style: 'approve' })}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      {edit && (\r\n        <ProjectForm\r\n          org={props.proj.org_id}\r\n          updateProjInState={props.updateProjInState}\r\n          toggleForm={toggleEdit}\r\n          proj={props.proj}\r\n        />\r\n      )}\r\n      <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectBar\r\n","import React, { Component } from 'react'\r\nimport { AuthContext } from '../../services/Auth.js'\r\nimport dbServices from '../../services/dbServices'\r\nimport Loading from '../Loading/Loading'\r\nimport ProjectForm from '../Project/ProjectForm/ProjectForm'\r\nimport Sidebar from '../Sidebar/Sidebar'\r\nimport StyleIcon from '../StyleIcon/StyleIcon'\r\nimport ProjectBar from '../Project/ProjectBar/ProjectBar'\r\nimport Swal from 'sweetalert2'\r\nimport './Dashboard.css'\r\n\r\nexport default class Dashboard extends Component {\r\n  static contextType = AuthContext\r\n  state = {\r\n    user: {\r\n      id: null,\r\n      name: null,\r\n      org: null,\r\n      role: null,\r\n    },\r\n    projects: [],\r\n    projectManagers: [],\r\n    loading: true,\r\n    expandProjects: true,\r\n    expandCompleteProjects: false,\r\n    expandPersonnel: true,\r\n    newProj: false,\r\n    error: false,\r\n  }\r\n\r\n  errorClose = () => {\r\n    this.setState({\r\n      error: true,\r\n    })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const email = this.context.currentUser.email\r\n    const org = this.context.currentUser.org\r\n    const name = this.context.currentUser.name\r\n    const role = this.context.currentUser.role\r\n\r\n    let data = []\r\n    try {\r\n      data = await dbServices.initDashboard(name, role, org)\r\n      let sortedProjectsComplete = []\r\n      let sortedProjectsIncomplete = []\r\n\r\n      data.projects.map((project, index) => {\r\n        if (project.date_completed || project.autoComplete) {\r\n          return sortedProjectsComplete.push(project)\r\n        } else return sortedProjectsIncomplete.push(project)\r\n      })\r\n\r\n      sortedProjectsIncomplete.sort((a, b) => {\r\n        return a.deadline.seconds - b.deadline.seconds\r\n      })\r\n\r\n      this.setState({\r\n        user: {\r\n          id: email,\r\n          name: name,\r\n          org: org,\r\n          role: role,\r\n        },\r\n        projects: sortedProjectsIncomplete,\r\n        completeProjects: sortedProjectsComplete,\r\n        projectManagers: data.project_managers,\r\n        loading: false,\r\n      })\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text: 'Dashboard failed to load. Please try again.',\r\n        icon: 'error',\r\n        confirmButtonText: 'Close',\r\n        onClose: this.errorClose(),\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleExpandProjects = e => {\r\n    e.stopPropagation()\r\n    this.setState({ expandProjects: !this.state.expandProjects })\r\n  }\r\n\r\n  toggleExpandCompleteProjects = e => {\r\n    e.stopPropagation()\r\n    this.setState({\r\n      expandCompleteProjects: !this.state.expandCompleteProjects,\r\n    })\r\n  }\r\n  toggleExpandPersonnel = e => {\r\n    e.stopPropagation()\r\n    this.setState({ expandPersonnel: !this.state.expandPersonnel })\r\n  }\r\n\r\n  toggleNewProj = e => {\r\n    e.stopPropagation()\r\n    if (this.state.newProj)\r\n      this.setState({ newProj: false, expandProjects: true })\r\n    else this.setState({ newProj: true, expandProjects: false })\r\n  }\r\n\r\n  addToProjState = newProj =>\r\n    this.setState({\r\n      projects: [...this.state.projects, newProj],\r\n      newProj: false,\r\n      expandProjects: true,\r\n    })\r\n\r\n  updateProjInState = proj => {\r\n    let projects = this.state.projects\r\n    let completedProjects = this.state.completeProjects\r\n    let updatedProjects = projects.filter(item => item.id !== proj.id)\r\n    completedProjects.push(proj)\r\n    this.setState({\r\n      projects: updatedProjects,\r\n      completeProjects: completedProjects,\r\n    })\r\n  }\r\n\r\n  deleteProjInState = (id, status) => {\r\n    if (status === 'incomplete') {\r\n      let projects = this.state.projects\r\n      projects = projects.filter(p => p.id !== id)\r\n      this.setState({ projects: projects })\r\n    }\r\n    if (status === 'complete') {\r\n      let projects = this.state.completeProjects\r\n      projects = projects.filter(p => p.id !== id)\r\n      this.setState({ completeProjects: projects })\r\n    }\r\n  }\r\n\r\n  updatePM = (projId, pm) => {\r\n    const projs = this.state.projects\r\n    projs.map(proj => {\r\n      if (proj.id === projId) proj.project_manager = pm\r\n      return proj\r\n    })\r\n    this.setState({ projects: projs })\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.error) {\r\n      if (this.state.loading) return <Loading />\r\n      else\r\n        return (\r\n          <section className=\"Dashboard__container\">\r\n            <div className=\"App__org_header\">\r\n              {<h2>{this.state.user.org}</h2>}\r\n              <span className=\"Dashboard__date\">\r\n                {new Date().toDateString()}\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"Dashboard__main\">\r\n              <section className=\"Dashboard__projects\">\r\n                <div\r\n                  className=\"App__section_header\"\r\n                  onClick={this.toggleExpandProjects}\r\n                  test-id=\"dash-header\"\r\n                >\r\n                  <div className=\"App__fa_h1\">\r\n                    {StyleIcon({\r\n                      style: `${this.state.expandProjects ? 'minus' : 'plus'}`,\r\n                    })}\r\n                    <h1>Projects</h1>\r\n                  </div>\r\n                  {this.state.user.role !== 'project worker' && (\r\n                    <button\r\n                      className=\"Dashboard__new\"\r\n                      onClick={this.toggleNewProj}\r\n                      test-id=\"new-project\"\r\n                    >\r\n                      New\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                {this.state.newProj && (\r\n                  <ProjectForm\r\n                    org={this.state.user.org}\r\n                    addToProjState={this.addToProjState}\r\n                    toggleForm={this.toggleNewProj}\r\n                  />\r\n                )}\r\n                {this.state.expandProjects && (\r\n                  <div className=\"Dashboard__projects_container\">\r\n                    {this.state.projects.length !== 0 ? (\r\n                      <ul className=\"Dashboard__list\">\r\n                        {this.state.projects.map(proj => {\r\n                          return (\r\n                            <li key={proj.id}>\r\n                              <ProjectBar\r\n                                proj={proj}\r\n                                role={this.state.user.role}\r\n                                projectManagers={this.state.projectManagers}\r\n                                updatePM={this.updatePM}\r\n                                updateProjInState={this.updateProjInState}\r\n                                deleteProjInState={this.deleteProjInState}\r\n                                view=\"dashboard\"\r\n                              />\r\n                            </li>\r\n                          )\r\n                        })}\r\n                      </ul>\r\n                    ) : (\r\n                      <div className=\"Dashboard__no_projects\">\r\n                        <span className=\"Dashboard__welcome\">Welcome!</span>\r\n                        {this.state.user.role !== 'project worker' ? (\r\n                          <span>\r\n                            You currently have no projects, click the NEW button\r\n                            above to add one.\r\n                          </span>\r\n                        ) : (\r\n                          <span>\r\n                            You are not currently assigned to any projects.\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n                <div\r\n                  className=\"App__section_header  App__separate_top_always\"\r\n                  onClick={this.toggleExpandCompleteProjects}\r\n                >\r\n                  <div className=\"App__fa_h1\">\r\n                    {StyleIcon({\r\n                      style: `${\r\n                        this.state.expandCompleteProjects ? 'minus' : 'plus'\r\n                      }`,\r\n                    })}\r\n                    <h1>Completed Projects</h1>\r\n                  </div>\r\n                </div>\r\n                {this.state.expandCompleteProjects && (\r\n                  <div className=\"Dashboard__projects_container App__separate_bottom\">\r\n                    {this.state.completeProjects.length !== 0 ? (\r\n                      <ul className=\"Dashboard__list\">\r\n                        {this.state.completeProjects.map(proj => {\r\n                          return (\r\n                            <li key={proj.id}>\r\n                              <ProjectBar\r\n                                proj={proj}\r\n                                role={this.state.user.role}\r\n                                projectManagers={this.state.projectManagers}\r\n                                updatePM={this.updatePM}\r\n                                updateProjInState={this.updateProjInState}\r\n                                deleteProjInState={this.deleteProjInState}\r\n                                view=\"dashboard\"\r\n                              />\r\n                            </li>\r\n                          )\r\n                        })}\r\n                      </ul>\r\n                    ) : (\r\n                      <div className=\"Dashboard__no_projects\">\r\n                        <span>\r\n                          You currently have no complete projects. Time to get\r\n                          to work!\r\n                        </span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </section>\r\n              <section className=\"App__personnel App__separate_top App__separate_bottom\">\r\n                <div\r\n                  className=\"App__section_header\"\r\n                  onClick={this.toggleExpandPersonnel}\r\n                >\r\n                  <div className=\"App__fa_h1\">\r\n                    {StyleIcon({\r\n                      style: `${this.state.expandPersonnel ? 'minus' : 'plus'}`,\r\n                    })}\r\n                    <h1>Personnel</h1>\r\n                  </div>\r\n                </div>\r\n                {this.state.expandPersonnel && <Sidebar />}\r\n              </section>\r\n            </div>\r\n          </section>\r\n        )\r\n    } else\r\n      return (\r\n        <body\r\n          alt=\"something terrible happened\"\r\n          background=\"https://media.giphy.com/media/jWexOOlYe241y/giphy.gif\"\r\n        />\r\n      )\r\n  }\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport Dropdown from '../../Dropdown/Dropdown'\r\nimport { Input, Label, Textarea } from '../../Form/Form'\r\nimport dbServices from '../../../services/dbServices'\r\nimport { AuthContext } from '../../../services/Auth'\r\nimport useFormValidation from '../../../hooks/useFormValidation'\r\nimport validateInput from '../../../hooks/validateInput'\r\nimport './JobForm.css'\r\nimport dateConversions from '../../../services/dateConversions'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst NewJob = props => {\r\n  const [selected, setSelected] = useState(0)\r\n\r\n  const { currentUser } = useContext(AuthContext)\r\n\r\n  const getEmployees = () => {\r\n    if (props.job) {\r\n      let workers = []\r\n      props.job.project_workers.forEach(worker =>\r\n        workers.push({ value: worker, label: worker })\r\n      )\r\n      return workers\r\n    }\r\n  }\r\n\r\n  const INITIAL_STATE = {\r\n    name: props.job ? props.job.name : '',\r\n    description: props.job ? props.job.description : '',\r\n    deadline: props.job ? dateConversions.TStoFormDate(props.job.deadline) : '',\r\n    total_hours: props.job ? props.job.total_hours : '',\r\n  }\r\n\r\n  const handleSubmitForm = async e => {\r\n    const { name, description, total_hours, deadline } = values\r\n    let employees = props.job\r\n      ? [props.job.project_manager]\r\n      : [props.project.project_manager]\r\n    if (selected)\r\n      selected.map(itm => {\r\n        if (itm.value !== employees[0]) {\r\n          employees.push(itm.value)\r\n        }\r\n        return 'submitted'\r\n      })\r\n\r\n    let projectId = props.job ? props.job.project_id : props.projectId\r\n    let projectManager = props.job\r\n      ? props.job.project_manager\r\n      : props.project.project_manager\r\n    let id = props.job ? props.job.id : null\r\n    let approval = props.job ? props.job.approval : false\r\n    let date_created = props.job ? props.job.date_created : new Date()\r\n    let hours_completed = props.job ? props.job.hours_completed : 0\r\n    let status = 'in progress'\r\n    let edit = null\r\n    let alert = []\r\n    let employee_hours = props.job\r\n      ? props.job.employee_hours\r\n      : [{ name: props.project.project_manager, hours: 0 }]\r\n\r\n    if (props.job) {\r\n      if (props.job.status === 'edit request') status = 'in progress'\r\n      else status = props.job.status\r\n\r\n      employees.map(employee => {\r\n        if (!props.job.project_workers.includes(employee))\r\n          return alert.push(employee)\r\n        else return null\r\n      })\r\n\r\n      employees.forEach(employee => {\r\n        let hoursObj = props.job.employee_hours.find(\r\n          ({ name }) => name === employee\r\n        )\r\n        if (!hoursObj) {\r\n          return employee_hours.push({ name: employee, hours: 0 })\r\n        } else return null\r\n      })\r\n    } else {\r\n      employees.map(employee => {\r\n        return alert.push(employee)\r\n      })\r\n\r\n      employees.forEach(emp => {\r\n        if (emp !== props.project.project_manager) {\r\n          employee_hours.push({ name: emp, hours: 0 })\r\n        }\r\n      })\r\n    }\r\n\r\n    const jobObj = {\r\n      approval,\r\n      date_created,\r\n      deadline: dateConversions.dateToTimestamp(new Date(deadline)),\r\n      description,\r\n      name,\r\n      organization: currentUser.org,\r\n      total_hours,\r\n      hours_completed,\r\n      project_id: projectId,\r\n      project_manager: projectManager,\r\n      project_workers: employees,\r\n      status,\r\n      id,\r\n      edit,\r\n      alert,\r\n      employee_hours,\r\n    }\r\n    if (props.job) {\r\n      try {\r\n        await dbServices.editJob(id, jobObj)\r\n      } catch (error) {\r\n        console.warn(error)\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text:\r\n            'There was an issue editing this task - please refresh the page and try again. 1',\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n        })\r\n      }\r\n    } else {\r\n      try {\r\n        await dbServices.addJob(jobObj, projectId)\r\n      } catch (error) {\r\n        console.warn(error)\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text: 'There was an issue - please refresh the page and try again. 2',\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n        })\r\n      }\r\n    }\r\n\r\n    let updatedProjectWorkers = null\r\n\r\n    if (props.job) {\r\n      let projects = []\r\n      try {\r\n        await dbServices\r\n          .getProjectById(props.job.project_id, currentUser.org)\r\n          .then(project => projects.push(project.data()))\r\n      } catch (error) {\r\n        console.warn(error)\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text: 'There was an issue - please refresh the page and try again.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n        })\r\n      }\r\n      let project = projects[0]\r\n      updatedProjectWorkers = project.project_workers\r\n    } else {\r\n      updatedProjectWorkers = props.project.project_workers\r\n    }\r\n\r\n    jobObj.project_workers.map(worker => {\r\n      if (!updatedProjectWorkers.includes(worker)) {\r\n        return updatedProjectWorkers.push(worker)\r\n      } else return null\r\n    })\r\n\r\n    try {\r\n      await dbServices\r\n        .updateProjectWorkers(projectId, updatedProjectWorkers, currentUser.org)\r\n        .then(() => {\r\n          props.showJobForm()\r\n        })\r\n    } catch (error) {\r\n      console.warn(error)\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text:\r\n          'There was an issue assigning employees to this project - please refresh the page and try again.',\r\n        icon: 'error',\r\n        confirmButtonText: 'Close',\r\n      })\r\n    }\r\n  }\r\n\r\n  const {\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    errors,\r\n    isSubmitting,\r\n  } = useFormValidation(\r\n    INITIAL_STATE,\r\n    validateInput.validateJobForm,\r\n    handleSubmitForm\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"Form\">\r\n        <legend>{props.projectId ? 'Add New Task' : 'Edit Task'}</legend>\r\n        <div className=\"input\">\r\n          <Label htmlFor=\"name\">Task Name: </Label>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            test-id=\"task-name\"\r\n            onChange={handleChange}\r\n            value={values.name}\r\n            onBlur={handleBlur}\r\n          />\r\n          {errors.name && <p>*{errors.name}</p>}\r\n        </div>\r\n        <div className=\"input\">\r\n          <Label htmlFor=\"description\">Details: </Label>\r\n          <Textarea\r\n            name=\"description\"\r\n            id=\"description\"\r\n            test-id=\"task-desc\"\r\n            onChange={handleChange}\r\n            value={values.description}\r\n            onBlur={handleBlur}\r\n          />\r\n          {errors.description && <p>*{errors.description}</p>}\r\n        </div>\r\n        <div className=\"input\">\r\n          <Label htmlFor=\"total_hours\">Total Hours: </Label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"total_hours\"\r\n            id=\"total_hours\"\r\n            test-id=\"task-hours\"\r\n            onChange={handleChange}\r\n            value={values.total_hours}\r\n            onBlur={handleBlur}\r\n          />\r\n          {errors.total_hours && <p>*{errors.total_hours}</p>}\r\n        </div>\r\n        <div className=\"input\">\r\n          <Label htmlFor=\"deadline\">Deadline: </Label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"deadline\"\r\n            id=\"deadline\"\r\n            test-id=\"task-deadline\"\r\n            onChange={handleChange}\r\n            value={values.deadline}\r\n            onBlur={handleBlur}\r\n          />\r\n          {errors.deadline && <p>*{errors.deadline}</p>}\r\n        </div>\r\n        <Dropdown\r\n          isMulti={true}\r\n          setSelected={setSelected}\r\n          defaultValue={getEmployees()}\r\n          placeholder=\"Assign Employees\"\r\n        />\r\n        <button\r\n          className=\"btn_highlight_color\"\r\n          type=\"submit\"\r\n          test-id=\"submit-task\"\r\n          disabled={isSubmitting}\r\n        >\r\n          Submit\r\n        </button>\r\n        <button className=\"btn_secondary_color\" onClick={props.showJobForm}>\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewJob\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport dbServices from '../../services/dbServices'\r\nimport JobForm from '../Project/JobForm/JobForm'\r\nimport { AuthContext } from '../../services/Auth'\r\nimport StyleIcon from '../StyleIcon/StyleIcon'\r\nimport Swal from 'sweetalert2'\r\nimport dateConversions from '../../services/dateConversions'\r\n\r\nexport default class JobNotificationList extends Component {\r\n  state = {\r\n    editing: false,\r\n    editJob: null,\r\n    notificationList: [],\r\n    error: false,\r\n  }\r\n\r\n  static contextType = AuthContext\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      notificationList: this.props.notificationList,\r\n    })\r\n  }\r\n\r\n  setError = () => {\r\n    this.setState({\r\n      error: true,\r\n    })\r\n  }\r\n\r\n  handleApprovalSubmit = async (id, status, approval = false, jobObj) => {\r\n    try {\r\n      jobObj.approval = approval\r\n      if (status === 'completed' || status === 'revisions') {\r\n        jobObj.alert = jobObj.project_workers\r\n      }\r\n      if (status === 'completed')\r\n        jobObj.date_completed = dateConversions.dateToTimestamp(new Date())\r\n      jobObj.status = status\r\n      await dbServices.updateJob(jobObj)\r\n      this.props.updateList(jobObj)\r\n      this.setState({\r\n        notificationList: this.props.notificationList,\r\n      })\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text: 'Failed to post job update.',\r\n        icon: 'error',\r\n        confirmButtonText: 'Close',\r\n        onClose: this.setError(),\r\n      })\r\n    }\r\n  }\r\n\r\n  handleClick = async (id, jobObj, e) => {\r\n    if (\r\n      this.context.currentUser.role === 'project manager' ||\r\n      this.context.currentUser.role === 'owner'\r\n    )\r\n      return null\r\n    else {\r\n      try {\r\n        let newAlert = jobObj.alert.filter(\r\n          name => name !== this.context.currentUser.name\r\n        )\r\n        jobObj.alert = newAlert\r\n        await dbServices.updateJobAlert(jobObj)\r\n        this.props.updateList(jobObj)\r\n        this.props.renderList(e)\r\n        this.setState({\r\n          notificationList: this.props.notificationList,\r\n        })\r\n      } catch (error) {\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text:\r\n            'Failed to update notification status. You are being directed to the project page.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n          onClose: this.setError(),\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  openEdit = (jobObj = null, e) => {\r\n    if (jobObj === null) this.props.updateList(this.state.editJob)\r\n    this.setState({\r\n      editing: !this.state.editing,\r\n      editJob: jobObj,\r\n      notificationList: this.props.notificationList,\r\n    })\r\n  }\r\n\r\n  renderJobEdit = job => {\r\n    let jobKeys = Object.keys(job.edit)\r\n    return jobKeys.map((jobKey, index) => {\r\n      if (job.edit[jobKey] && jobKey !== 'employee') {\r\n        return (\r\n          <li key={index + jobKey}>\r\n            {jobKey}: {job.edit[jobKey]}\r\n          </li>\r\n        )\r\n      } else return <></>\r\n    })\r\n  }\r\n\r\n  renderEmployeeNotificationDetails = jobObj => {\r\n    if (jobObj.status === 'in progress')\r\n      return <span> - You have been added to this job.</span>\r\n    if (jobObj.status === 'submitted')\r\n      return <span> has been submitted for review.</span>\r\n    if (jobObj.status === 'revisions')\r\n      return <span> has been returned for revisions.</span>\r\n    if (jobObj.status === 'completed') return <span> has been completed!</span>\r\n  }\r\n\r\n  renderPromoted = () => {\r\n    if (this.props.promoted)\r\n      return (\r\n        <li>\r\n          You have been promoted to Project Manager!{' '}\r\n          <div\r\n            className=\"JobNotification__close\"\r\n            onClick={() => this.props.dismissPromoted()}\r\n          >\r\n            {StyleIcon({ style: 'close' })}\r\n          </div>\r\n        </li>\r\n      )\r\n  }\r\n\r\n  renderJobList = () => {\r\n    return this.state.notificationList.map(jobObj => {\r\n      return (\r\n        <li key={jobObj.id} className=\"notification_job\">\r\n          <div className=\"JobNotification__info\">\r\n            <span className=\"JobNotification__job_link\">\r\n              <Link\r\n                to={{\r\n                  pathname: `/project/${jobObj.project_id}`,\r\n                }}\r\n                onClick={e => this.handleClick(jobObj.id, jobObj, e)}\r\n              >\r\n                {jobObj.name}\r\n              </Link>\r\n            </span>\r\n            {this.context.currentUser.role === 'project worker' &&\r\n              this.renderEmployeeNotificationDetails(jobObj)}\r\n          </div>\r\n          {this.context.currentUser.role === 'project worker' ? (\r\n            <div\r\n              className=\"JobNotification__close\"\r\n              onClick={e => this.handleClick(jobObj.id, jobObj, e)}\r\n            >\r\n              {StyleIcon({ style: 'close' })}\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          {this.context.currentUser.role === 'project manager' ? (\r\n            <>\r\n              {jobObj.status === 'submitted' ? (\r\n                <div className=\"JobNotification__approval\">\r\n                  <h5>Task Submitted For Approval</h5>\r\n                  <button\r\n                    className=\"btn_highlight_color notification_button\"\r\n                    onClick={e =>\r\n                      this.handleApprovalSubmit(\r\n                        jobObj.id,\r\n                        'completed',\r\n                        true,\r\n                        jobObj\r\n                      )\r\n                    }\r\n                  >\r\n                    Approve\r\n                  </button>\r\n                  <button\r\n                    className=\"btn_highlight_color notification_button\"\r\n                    onClick={e =>\r\n                      this.handleApprovalSubmit(\r\n                        jobObj.id,\r\n                        'revisions',\r\n                        false,\r\n                        jobObj\r\n                      )\r\n                    }\r\n                  >\r\n                    Request Revision\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {jobObj.status === 'edit request' ? (\r\n                <div>\r\n                  <ul>{this.renderJobEdit(jobObj)}</ul>\r\n                  <button onClick={e => this.openEdit(jobObj, e)}>\r\n                    Submit Edit\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) return null\r\n    else {\r\n      return (\r\n        <div>\r\n          <ul className=\"JobNotification__list\">\r\n            {this.renderPromoted()}\r\n            {this.renderJobList()}\r\n          </ul>\r\n          {this.state.editing ? (\r\n            <JobForm showJobForm={this.openEdit} job={this.state.editJob} />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport dbServices from '../../services/dbServices'\r\nimport { AuthContext } from '../../services/Auth'\r\nimport StyleIcon from '../StyleIcon/StyleIcon'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default class OwnerNotification extends Component {\r\n  state = {\r\n    newEmployees: null,\r\n    newProjects: null,\r\n    completedProjects: null,\r\n  }\r\n\r\n  static contextType = AuthContext\r\n\r\n  handleNewEmployee = async (employee, e) => {\r\n    try {\r\n      employee.new = false\r\n      await dbServices.updateWorker(employee, this.context.currentUser.org)\r\n      this.props.updateList(employee, e)\r\n      this.setState({\r\n        newEmployees: this.props.newEmployees,\r\n      })\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text: 'Employee status failed to update.',\r\n        icon: 'error',\r\n        confirmButtonText: 'Close',\r\n      })\r\n    }\r\n  }\r\n\r\n  handleClick = async (project, type, e) => {\r\n    e.stopPropagation()\r\n    project.alert = false\r\n    await dbServices\r\n      .updateProject(project)\r\n      .then(this.props.updateProjectList(project, type))\r\n      .then(this.props.renderList(e))\r\n  }\r\n\r\n  renderNewEmployees = () => {\r\n    if (this.props.newEmployees.length > 0) {\r\n      return this.props.newEmployees.map((employee, index) => {\r\n        return (\r\n          <li key={index + employee}>\r\n            <Link\r\n              to={`/profile/${employee.email}`}\r\n              onClick={e => this.handleNewEmployee(employee, e)}\r\n            >\r\n              {employee.name} has joined your organization!\r\n            </Link>\r\n            <div\r\n              className=\"JobNotification__close\"\r\n              onClick={() => this.handleNewEmployee(employee)}\r\n            >\r\n              {StyleIcon({ style: 'close' })}\r\n            </div>\r\n          </li>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  renderNewProjects = () => {\r\n    if (this.props.newProjects.length > 0) {\r\n      return this.props.newProjects.map(project => {\r\n        return (\r\n          <li key={project.id}>\r\n            <Link\r\n              onClick={e => this.handleClick(project, 'new', e)}\r\n              to={{ pathname: `/project/${project.id}` }}\r\n            >\r\n              {project.name} has started.\r\n            </Link>\r\n            <div\r\n              className=\"JobNotification__close\"\r\n              onClick={e => this.handleClick(project, 'new', e)}\r\n            >\r\n              {StyleIcon({ style: 'close' })}\r\n            </div>\r\n          </li>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  renderCompletedProjects = () => {\r\n    if (this.props.completedProjects.length > 0) {\r\n      return this.props.completedProjects.map(project => {\r\n        return (\r\n          <li key={project.id}>\r\n            <Link\r\n              onClick={e => this.handleClick(project, 'completed', e)}\r\n              to={{ pathname: `/project/${project.id}` }}\r\n            >\r\n              {project.name} has been completed!\r\n            </Link>\r\n            <div\r\n              className=\"JobNotification__close\"\r\n              onClick={e => this.handleClick(project, 'completed', e)}\r\n            >\r\n              {StyleIcon({ style: 'close' })}\r\n            </div>\r\n          </li>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      newEmployees: this.props.newEmployees,\r\n      newProjects: this.props.newProjects,\r\n      completedProjects: this.props.completedProjects,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"JobNotification__list\">\r\n          {this.renderNewEmployees()}\r\n          {this.renderNewProjects()}\r\n          {this.renderCompletedProjects()}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport dbServices from '../../services/dbServices'\r\nimport JobNotificationList from './JobNotificationList'\r\nimport OwnerNotification from './OwnerNotification'\r\nimport { AuthContext } from '../../services/Auth'\r\nimport Swal from 'sweetalert2'\r\nimport './JobNotification.css'\r\nimport StyleIcon from '../StyleIcon/StyleIcon'\r\n\r\nexport default class JobNotification extends Component {\r\n  state = {\r\n    notificationCount: 0,\r\n    notificationList: [],\r\n    notificationDropDown: false,\r\n    newEmployees: [],\r\n    completedProjects: [],\r\n    newProjects: [],\r\n    error: false,\r\n    promoted: false,\r\n  }\r\n\r\n  static contextType = AuthContext\r\n\r\n  setError = () => {\r\n    this.setState({\r\n      error: true,\r\n    })\r\n  }\r\n\r\n  getProjects = async () => {\r\n    let projectList = []\r\n    if (this.context.currentUser.role !== 'owner')\r\n      try {\r\n        await dbServices\r\n          .getProjectsByRole(this.context.currentUser)\r\n          .then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n              projectList.push(doc.data())\r\n            })\r\n          })\r\n        return projectList\r\n      } catch (error) {\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text:\r\n            'Failed to fetch projects. Notifications are temporarily disabled.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n          onClose: this.setError(),\r\n        })\r\n      }\r\n  }\r\n\r\n  populateNotificationList = async (projectList = null) => {\r\n    if (this.context.currentUser.role === 'project manager') {\r\n      let promoted = false\r\n      await dbServices\r\n        .getUser(this.context.currentUser.email, this.context.currentUser.org)\r\n        .then(snapshot => {\r\n          return snapshot.forEach(doc => {\r\n            if (doc.data().promoted) {\r\n              return (promoted = true)\r\n            } else return (promoted = false)\r\n          })\r\n        })\r\n        .then(res => {\r\n          if (promoted) {\r\n            this.setState({\r\n              notificationCount: this.state.notificationCount + 1,\r\n              promoted: true,\r\n            })\r\n          }\r\n        })\r\n      let jobsList = []\r\n      projectList.map(async project => {\r\n        let snapshot\r\n        try {\r\n          snapshot = await dbServices.getJobs(project.org_id, project.id)\r\n          snapshot.forEach(doc => {\r\n            if (\r\n              doc.data().status === 'submitted' ||\r\n              doc.data().status === 'edit request'\r\n            )\r\n              jobsList.push(doc.data())\r\n          })\r\n          let newCount\r\n          if (this.state.promoted) newCount = jobsList.length + 1\r\n          else newCount = jobsList.length\r\n          this.setState({\r\n            notificationList: jobsList,\r\n            notificationCount: newCount,\r\n          })\r\n\r\n          return jobsList\r\n        } catch (error) {\r\n          Swal.fire({\r\n            title: 'Error!',\r\n            text: 'Jobs failed to load. Notifications temporarily disabled.',\r\n            icon: 'error',\r\n            confirmButtonText: 'Close',\r\n            onClose: this.setError(),\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    if (this.context.currentUser.role === 'project worker') {\r\n      let jobsList = []\r\n      projectList.map(async project => {\r\n        let snapshot\r\n        try {\r\n          snapshot = await dbServices.getJobs(project.org_id, project.id)\r\n          snapshot.forEach(doc => {\r\n            if (doc.data().alert.includes(this.context.currentUser.name))\r\n              jobsList.push(doc.data())\r\n          })\r\n          this.setState({\r\n            notificationList: jobsList,\r\n            notificationCount: jobsList.length,\r\n          })\r\n          return jobsList\r\n        } catch (error) {\r\n          Swal.fire({\r\n            title: 'Error!',\r\n            text: 'Jobs failed to load. Notifications temporarily disabled.',\r\n            icon: 'error',\r\n            confirmButtonText: 'Close',\r\n            onClose: this.setError(),\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    if (this.context.currentUser.role === 'owner') {\r\n      let employees = []\r\n      let completed = []\r\n      let newProj = []\r\n      try {\r\n        await dbServices\r\n          .getEmployees(this.context.currentUser.org)\r\n          .then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n              if (doc.data().new) employees.push(doc.data())\r\n            })\r\n            this.setState({\r\n              newEmployees: employees,\r\n              notificationCount:\r\n                this.state.notificationCount + employees.length,\r\n            })\r\n          })\r\n        await dbServices\r\n          .getProjectsByRole(this.context.currentUser)\r\n          .then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n              if (doc.data().alert === true && doc.data().date_completed)\r\n                completed.push(doc.data())\r\n              if (doc.data().alert === true && !doc.data().date_completed)\r\n                newProj.push(doc.data())\r\n            })\r\n            this.setState({\r\n              newProjects: newProj,\r\n              completedProjects: completed,\r\n              notificationCount:\r\n                this.state.notificationCount +\r\n                newProj.length +\r\n                completed.length,\r\n            })\r\n          })\r\n      } catch (error) {\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text: 'Failed to fetch projects. Notifications temporarily disabled.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n          onClose: this.setError(),\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (\r\n      this.context.currentUser.role === 'project worker' ||\r\n      this.context.currentUser.role === 'project manager'\r\n    )\r\n      await this.getProjects().then(projects =>\r\n        this.populateNotificationList(projects)\r\n      )\r\n    else {\r\n      await this.populateNotificationList()\r\n    }\r\n  }\r\n\r\n  renderList = e => {\r\n    this.setState({\r\n      notificationDropDown: !this.state.notificationDropDown,\r\n    })\r\n  }\r\n\r\n  updateList = jobObj => {\r\n    let newNotifications = this.state.notificationList.filter(\r\n      item => item.id !== jobObj.id\r\n    )\r\n    this.setState({\r\n      notificationList: newNotifications,\r\n      notificationCount: newNotifications.length,\r\n      notificationDropDown: !this.state.notificationDropDown,\r\n    })\r\n  }\r\n\r\n  updateNewEmployees = empObj => {\r\n    let updatedNewEmployees = this.state.newEmployees.filter(\r\n      item => item.email !== empObj.email\r\n    )\r\n    this.setState({\r\n      newEmployees: updatedNewEmployees,\r\n      notificationCount: this.state.notificationCount - 1,\r\n    })\r\n  }\r\n\r\n  updateProjectList = (projObj, list) => {\r\n    if (list === 'completed') {\r\n      let updatedCompletedProjects = this.state.completedProjects.filter(\r\n        item => item.id !== projObj.id\r\n      )\r\n      this.setState({\r\n        completedProjects: updatedCompletedProjects,\r\n        notificationCount: this.state.notificationCount - 1,\r\n      })\r\n    } else if (list === 'new') {\r\n      let updatedNewProjects = this.state.newProjects.filter(\r\n        item => item.id !== projObj.id\r\n      )\r\n      this.setState({\r\n        newProjects: updatedNewProjects,\r\n        notificationCount: this.state.notificationCount - 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  dismissPromoted = () => {\r\n    this.setState({\r\n      notificationCount: this.state.notificationCount - 1,\r\n      promoted: false,\r\n    })\r\n    dbServices.updatePromoted(this.context.currentUser)\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) return null\r\n    else {\r\n      if (this.context.currentUser.role === 'owner')\r\n        return (\r\n          <>\r\n            {this.state.notificationCount > 0 && (\r\n              <button\r\n                className=\"JobNotification__btn\"\r\n                onClick={e => this.renderList(e)}\r\n              >\r\n                <span className=\"JobNotification__icon\">\r\n                  {this.state.notificationDropDown\r\n                    ? StyleIcon({ style: 'left' })\r\n                    : StyleIcon({ style: 'collapse' })}\r\n                </span>\r\n                Notifications\r\n                <span className=\"JobNotification__number\">\r\n                  {this.state.notificationCount}\r\n                </span>\r\n              </button>\r\n            )}\r\n            {this.state.notificationDropDown &&\r\n            this.state.notificationCount > 0 ? (\r\n              <OwnerNotification\r\n                newEmployees={this.state.newEmployees}\r\n                completedProjects={this.state.completedProjects}\r\n                newProjects={this.state.newProjects}\r\n                user={this.context.currentUser}\r\n                updateList={this.updateNewEmployees}\r\n                updateProjectList={this.updateProjectList}\r\n                renderList={this.renderList}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </>\r\n        )\r\n      return (\r\n        <>\r\n          {this.state.notificationCount > 0 && (\r\n            <button\r\n              className=\"JobNotification__btn\"\r\n              onClick={e => this.renderList(e)}\r\n            >\r\n              <span className=\"JobNotification__icon\">\r\n                {this.state.notificationDropDown\r\n                  ? StyleIcon({ style: 'left' })\r\n                  : StyleIcon({ style: 'collapse' })}\r\n              </span>\r\n              Notifications\r\n              <span className=\"JobNotification__number\">\r\n                {this.state.notificationCount}\r\n              </span>\r\n            </button>\r\n          )}\r\n          {this.state.notificationDropDown &&\r\n          this.state.notificationCount > 0 ? (\r\n            <JobNotificationList\r\n              notificationList={this.state.notificationList}\r\n              updateList={this.updateList}\r\n              renderList={this.renderList}\r\n              promoted={this.state.promoted}\r\n              dismissPromoted={this.dismissPromoted}\r\n            />\r\n          ) : null}\r\n        </>\r\n      )\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AuthContext } from '../../services/Auth'\r\nimport lazy from '../../images/lazy.svg'\r\nimport './Header.css'\r\nimport app from '../../services/base'\r\nimport JobNotification from '../../components/JobNotification/JobNotification'\r\n\r\nexport default class Header extends Component {\r\n  static contextType = AuthContext\r\n\r\n  renderLoginLink() {\r\n    return (\r\n      <div className=\"Header__sub_container\">\r\n        <div className=\"Header__login\">\r\n          <Link className=\"Header__btn Header__alt\" to=\"/login\">\r\n            Log In\r\n          </Link>\r\n          <Link className=\"Header__btn Header__primary\" to=\"/register\">\r\n            Register\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  showRole = () => {\r\n    if (this.context.currentUser.role === 'owner') return 'Owner'\r\n    if (this.context.currentUser.role === 'project manager')\r\n      return 'Project Manager'\r\n    if (this.context.currentUser.role === 'project worker')\r\n      return 'Project Worker'\r\n  }\r\n\r\n  renderLogoutLink() {\r\n    return (\r\n      <div className=\"Header__sub_container\">\r\n        <div className=\"Header__user_info\">\r\n          <span test-id=\"header-name\">\r\n            Welcome, {this.context.currentUser.name}!\r\n          </span>\r\n          <span test-id=\"header-role\">Role: {this.showRole()}</span>\r\n        </div>\r\n        <div className=\"Header__db_logout\">\r\n          <Link to=\"/dashboard\">\r\n            <h3 className=\"Header__dashboard\" id=\"dashboard-button\">\r\n              Dashboard\r\n            </h3>\r\n          </Link>\r\n          <Link\r\n            onClick={() => this.handleLogout()}\r\n            className=\"Header__btn  Header__alt\"\r\n            to=\"/\"\r\n            test-id=\"logout-button\"\r\n          >\r\n            Log Out\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleLogout = () => {\r\n    this.props.setPath(null)\r\n    localStorage.removeItem('path')\r\n    app.auth().signOut()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <nav className=\"Header\">\r\n          <h1>\r\n            <Link className=\"Header__link\" to=\"/dashboard\">\r\n              <img\r\n                className=\"Header__logo\"\r\n                src={lazy}\r\n                alt=\"man reclining in chair\"\r\n              />\r\n              <span className=\"Header__app_name\">manageLazily</span>\r\n            </Link>\r\n          </h1>\r\n          {this.context.currentUser\r\n            ? this.renderLogoutLink()\r\n            : this.renderLoginLink()}\r\n        </nav>\r\n        <div className=\"Header__notifications\">\r\n          {this.context.currentUser && (\r\n            <JobNotification user={this.context.currentUser} />\r\n          )}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { useCallback, useContext } from 'react'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport app from '../../services/base.js'\r\nimport { AuthContext } from '../../services/Auth.js'\r\nimport { Label, Input } from '../Form/Form'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst Login = (setPath, { history }) => {\r\n  const { currentUser } = useContext(AuthContext)\r\n\r\n  const handleLogin = useCallback(\r\n    async event => {\r\n      event.preventDefault()\r\n      const { email, password } = event.target.elements\r\n      await app\r\n        .auth()\r\n        .signInWithEmailAndPassword(email.value, password.value)\r\n        .catch(error => {\r\n          console.warn(error)\r\n          Swal.fire({\r\n            title: 'Error!',\r\n            text:\r\n              error.code === 'auth/user-not-found'\r\n                ? 'Incorrect email'\r\n                : 'Incorrect password',\r\n            icon: 'error',\r\n            confirmButtonText: 'Close',\r\n          })\r\n        })\r\n    },\r\n    // eslint-disable-next-line\r\n    [history]\r\n  )\r\n\r\n  if (currentUser) {\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <form className=\"Form\" onSubmit={handleLogin}>\r\n        <legend>Login</legend>\r\n        <Label>\r\n          Email\r\n          <Input\r\n            test-id=\"login-email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Password\r\n          <Input\r\n            test-id=\"login-password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n        </Label>\r\n        <button\r\n          className=\"btn_highlight_color\"\r\n          type=\"submit\"\r\n          test-id=\"login-button\"\r\n        >\r\n          Log in\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Login)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from 'react-router'\r\nimport app from '../../services/base'\r\nimport dbServices from '../../services/dbServices'\r\nimport { Label, Input } from '../Form/Form'\r\nimport useFormValidation from '../../hooks/useFormValidation'\r\nimport validateInput from '../../hooks/validateInput'\r\nimport Swal from 'sweetalert2'\r\nimport './SignUp.css'\r\n\r\nconst SignUp = ({ history }, props) => {\r\n  const functions = app.functions()\r\n\r\n  const inputValues = {\r\n    email: '',\r\n    name: '',\r\n    password: '',\r\n    orgName: '',\r\n  }\r\n\r\n  const [orgList, setOrgList] = useState([])\r\n  const [role, setRole] = useState('worker')\r\n\r\n  const getOrgs = async () => {\r\n    let orgs = []\r\n    const dborgs = await dbServices.getAllOrgs()\r\n    dborgs.forEach(item => orgs.push(item.data().name))\r\n    return orgs\r\n  }\r\n\r\n  useEffect(() => {\r\n    getOrgs().then(list => setOrgList(list))\r\n  }, [])\r\n\r\n  const handleSignUp = async () => {\r\n    const { email, name, password, orgName } = values\r\n    const registerOwner = await functions.httpsCallable('registerOwner')\r\n    const registerWorker = await functions.httpsCallable('registerWorker')\r\n    const registerProjectManager = await functions.httpsCallable(\r\n      'registerProjectManager'\r\n    )\r\n    let info = {\r\n      email: email,\r\n      password: password,\r\n      name: name,\r\n      org: orgName,\r\n      displayName: name,\r\n    }\r\n    let infoNoPass = {\r\n      email: email,\r\n      name: name,\r\n      org: orgName,\r\n      displayName: name,\r\n    }\r\n    switch (role) {\r\n      case 'owner':\r\n        registerOwner(info)\r\n          .then(() =>\r\n            dbServices.createOwner({ ...infoNoPass, role: 'owner' }, info.org)\r\n          )\r\n          .catch(error => {\r\n            console.warn(error)\r\n            Swal.fire({\r\n              title: 'Error!',\r\n              text:\r\n                'There was an issue with registration - please refresh the page and try again.',\r\n              icon: 'error',\r\n              confirmButtonText: 'Close',\r\n            })\r\n          })\r\n        break\r\n      case 'worker':\r\n        registerWorker(info)\r\n          .then(() =>\r\n            dbServices.createUserInOrg(\r\n              { ...infoNoPass, role: 'project worker' },\r\n              orgName\r\n            )\r\n          )\r\n          .catch(error => {\r\n            console.warn(error)\r\n            Swal.fire({\r\n              title: 'Error!',\r\n              text:\r\n                'There was an issue with registration - please refresh the page and try again.',\r\n              icon: 'error',\r\n              confirmButtonText: 'Close',\r\n            })\r\n          })\r\n        break\r\n      case 'manager':\r\n        registerProjectManager(info)\r\n          .then(() =>\r\n            dbServices.createUserInOrg(\r\n              { ...infoNoPass, role: 'project manager' },\r\n              orgName\r\n            )\r\n          )\r\n          .catch(error => {\r\n            console.warn(error)\r\n            Swal.fire({\r\n              title: 'Error!',\r\n              text:\r\n                'There was an issue with registration - please refresh the page and try again.',\r\n              icon: 'error',\r\n              confirmButtonText: 'Close',\r\n            })\r\n          })\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    history.push('/login')\r\n    return `${email} signed up`\r\n  }\r\n\r\n  const renderOrgSelect = () => {\r\n    if (role === 'owner') {\r\n      return (\r\n        <Input\r\n          type=\"text\"\r\n          name=\"orgName\"\r\n          onChange={handleChange}\r\n          value={values.orgName}\r\n          onBlur={handleBlur}\r\n          placeholder=\"Organization name\"\r\n        />\r\n      )\r\n    }\r\n    return (\r\n      <select\r\n        name=\"orgName\"\r\n        onChange={handleChange}\r\n        value={values.orgName}\r\n        onBlur={handleBlur}\r\n        placeholder=\"Organization name\"\r\n      >\r\n        <option value=\"\" disabled hidden>Choose Organization...</option>\r\n        {orgList && orgList.length > 0 ? (\r\n          orgList.map((item, i) => {\r\n            return (\r\n              <option key={i} value={item}>\r\n                {item}\r\n              </option>\r\n            )\r\n          })\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </select>\r\n    )\r\n  }\r\n\r\n  const changeRole = (e, role) => {\r\n    e.stopPropagation()\r\n    setRole(role)\r\n  }\r\n\r\n  const {\r\n    handleSubmit,\r\n    errors,\r\n    handleChange,\r\n    values,\r\n    handleBlur,\r\n    isSubmitting,\r\n  } = useFormValidation(inputValues, validateInput.validateSignup, handleSignUp)\r\n\r\n  return (\r\n    <div className=\"Register\">\r\n      <form className=\"Form\" onSubmit={handleSubmit}>\r\n        <h1>I am a: </h1>\r\n        <div className=\"radio-toolbar\">\r\n          <Input\r\n            type=\"radio\"\r\n            value=\"worker\"\r\n            id=\"check_worker\"\r\n            name=\"entry_type\"\r\n            checked={role === 'worker'}\r\n            onChange={e => changeRole(e, 'worker')}\r\n          />\r\n          <Label htmlFor=\"check_worker\">Project Worker</Label>\r\n          <Input\r\n            type=\"radio\"\r\n            value=\"manager\"\r\n            id=\"check_manager\"\r\n            name=\"entry_type\"\r\n            checked={role === 'manager'}\r\n            onChange={e => changeRole(e, 'manager')}\r\n          />\r\n          <Label htmlFor=\"check_manager\">Project Manager</Label>\r\n          <Input\r\n            type=\"radio\"\r\n            value=\"owner\"\r\n            id=\"check_owner\"\r\n            name=\"entry_type\"\r\n            checked={role === 'owner'}\r\n            onChange={e => changeRole(e, 'owner')}\r\n          />\r\n          <Label htmlFor=\"check_owner\">Company Owner</Label>\r\n        </div>\r\n        {errors.email && <span className=\"error\">*{errors.email}</span>}\r\n        <Label>\r\n          Email\r\n          <Input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            onChange={handleChange}\r\n            value={values.email}\r\n            onBlur={handleBlur}\r\n            placeholder=\"Email\"\r\n          />\r\n        </Label>\r\n        {errors.password && <span className=\"error\">*{errors.password}</span>}\r\n        <Label>\r\n          Password\r\n          <Input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values.password}\r\n          />\r\n        </Label>\r\n        {errors.name && <span className=\"error\">*{errors.name}</span>}\r\n        <Label htmlFor=\"username\">\r\n          Username\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            value={values.name}\r\n            onBlur={handleBlur}\r\n            placeholder=\"Username\"\r\n          />\r\n        </Label>\r\n        {errors.orgName && <span className=\"error\">*{errors.orgName}</span>}\r\n        <Label htmlFor=\"orgName\">Organization Name</Label>\r\n        {renderOrgSelect()}\r\n        <button\r\n          className=\"btn_highlight_color\"\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n        >\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(SignUp)\r\n","import React, { useState, useContext } from 'react'\r\nimport { Label, Input, Textarea } from '../../Form/Form'\r\nimport dbServices from '../../../services/dbServices'\r\nimport { AuthContext } from '../../../services/Auth'\r\nimport validateInput from '../../../hooks/validateInput'\r\nimport useFormValidation from '../../../hooks/useFormValidation'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst WorkerEditForm = props => {\r\n  // eslint-disable-next-line\r\n  const [submitted, setSubmitted] = useState(false)\r\n  const { currentUser } = useContext(AuthContext)\r\n\r\n  const INITIAL_STATE = {\r\n    name: props.job.name,\r\n    description: props.job.description,\r\n    total_hours: props.job.total_hours,\r\n    note: '',\r\n    employee: currentUser.name,\r\n  }\r\n\r\n  const submitRequest = async () => {\r\n    const { name, description, total_hours, note } = values\r\n    const editObj = {\r\n      name: name,\r\n      description: description,\r\n      total_hours: parseInt(total_hours),\r\n      note: note,\r\n      employee: currentUser.name,\r\n    }\r\n    try {\r\n      await dbServices.updateEdit(\r\n        editObj,\r\n        props.job.id,\r\n        props.job.project_id,\r\n        props.job.organization\r\n      )\r\n      await props\r\n        .handleStatus(props.job.id, 'edit request')\r\n        .then(setSubmitted(true))\r\n        .then(props.renderEditForm())\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text: error.message,\r\n        icon: 'error',\r\n        confirmButtonText: 'Close',\r\n      })\r\n    }\r\n  }\r\n\r\n  const {\r\n    handleSubmit,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    errors,\r\n    isSubmitting,\r\n  } = useFormValidation(\r\n    INITIAL_STATE,\r\n    validateInput.validateWorkerEditForm,\r\n    submitRequest\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"Form\">\r\n        <Label htmlFor=\"name\">\r\n          Task name\r\n          <Input\r\n            name=\"name\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            value={values.name}\r\n            onBlur={handleBlur}\r\n          />\r\n        </Label>\r\n        <Label htmlFor=\"description\">\r\n          Task Description\r\n          <Textarea\r\n            name=\"description\"\r\n            id=\"description\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            value={values.description}\r\n            onBlur={handleBlur}\r\n          />\r\n        </Label>\r\n        <Label htmlFor=\"total_hours\">\r\n          Total Hours: {props.job.total_hours}\r\n          <Input\r\n            name=\"total_hours\"\r\n            id=\"total_hours\"\r\n            type=\"number\"\r\n            onChange={handleChange}\r\n            value={values.total_hours}\r\n            onBlur={handleBlur}\r\n          />\r\n        </Label>\r\n        <Label htmlFor=\"note\">\r\n          Note for Project Manager:\r\n          <Textarea\r\n            name=\"note\"\r\n            id=\"note\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            value={values.note}\r\n            onBlur={handleBlur}\r\n          />\r\n        </Label>\r\n        <input type=\"button\" value=\"Cancel\" onClick={props.renderEditForm} />\r\n        <input type=\"submit\" disabled={isSubmitting} value=\"Submit\" />\r\n      </form>\r\n      {errors.note && <p>{errors.note}</p>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WorkerEditForm\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { useInput } from '../../hooks/useInput'\r\nimport { Label, Input } from '../Form/Form'\r\nimport dbServices from '../../services/dbServices'\r\nimport { AuthContext } from '../../services/Auth'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst LogHours = props => {\r\n  const { currentUser } = useContext(AuthContext)\r\n\r\n  const { value: hours, bind: bindHours, reset: resetHours } = useInput('')\r\n\r\n  const [submitted, setSubmitted] = useState(false)\r\n\r\n  const getMaxHours = () => {\r\n    let selectedJob = props.job\r\n    let maxHours =\r\n      parseInt(selectedJob.total_hours) - parseInt(selectedJob.hours_completed)\r\n\r\n    return maxHours\r\n  }\r\n\r\n  const renderJobHours = () => {\r\n    let selectedJob = props.job\r\n    let hoursWorked = selectedJob.hours_completed\r\n    let hoursNeeded = selectedJob.total_hours\r\n\r\n    return (\r\n      <span>\r\n        This task has {hoursWorked} hours worked out of an estimated{' '}\r\n        {hoursNeeded} hours needed.\r\n      </span>\r\n    )\r\n  }\r\n\r\n  const handleJobHoursSubmit = e => {\r\n    e.preventDefault()\r\n    let jobObj = props.job\r\n    let oldHours = parseInt(jobObj.hours_completed)\r\n    let newHours = oldHours + parseInt(hours)\r\n    let employeeHoursObj = jobObj.employee_hours.find(\r\n      item => item.name === currentUser.name\r\n    )\r\n    let oldEmpHours = parseInt(employeeHoursObj.hours)\r\n    let newEmpHours = oldEmpHours + parseInt(hours)\r\n    employeeHoursObj.hours = newEmpHours\r\n    let index = jobObj.employee_hours.findIndex(\r\n      item => item.name === employeeHoursObj.name\r\n    )\r\n    jobObj.employee_hours[index] = employeeHoursObj\r\n    jobObj.hours_completed = newHours\r\n\r\n    dbServices\r\n      .editJob(jobObj.id, jobObj)\r\n      .then(setSubmitted(true))\r\n      .then(() => {\r\n        props.renderLogHoursForm()\r\n      })\r\n      .catch(error => {\r\n        console.warn(error)\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text: 'There was an issue - please refresh the page and try again.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const resetFunction = async () => {\r\n      resetHours()\r\n    }\r\n    if (submitted)\r\n      return function resetAll() {\r\n        resetFunction()\r\n      }\r\n  })\r\n\r\n  return (\r\n    <form onSubmit={e => handleJobHoursSubmit(e)} className=\"Form\">\r\n      <Label htmlFor=\"job_hours\">\r\n        Number of Hours Worked:\r\n        <Input\r\n          name=\"job_hours\"\r\n          type=\"number\"\r\n          placeholder={0}\r\n          min=\"1\"\r\n          max={getMaxHours()}\r\n          {...bindHours}\r\n        />\r\n      </Label>\r\n      <div>{renderJobHours()}</div>\r\n      <button\r\n        onClick={() => props.renderLogHoursForm()}\r\n        className=\"btn_secondary_color\"\r\n      >\r\n        Cancel\r\n      </button>\r\n      <button type=\"submit\" className=\"btn_highlight_color\">\r\n        Submit Hours\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LogHours\r\n","import { useState } from 'react'\r\n\r\n// ended up doing some googling\r\n// learned about using functional components and hooks\r\n// looks very confusing at first, but it makes\r\n// a lot more sense to me once I got it all layed out\r\nexport const useInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue)\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(''),\r\n    bind: {\r\n      value,\r\n      onChange: event => {\r\n        setValue(event.target.value)\r\n      },\r\n    },\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { ProgressBar } from '../../ProgressBar/ProgressBar'\r\nimport JobForm from '../JobForm/JobForm'\r\nimport dbServices from '../../../services/dbServices'\r\nimport WorkerEditForm from '../WorkerEditForm/WorkerEditForm'\r\nimport { AuthContext } from '../../../services/Auth'\r\nimport StyleIcon from '../../StyleIcon/StyleIcon'\r\nimport dateConversions from '../../../services/dateConversions'\r\nimport LogHours from '../../LogHours/LogHours'\r\nimport { Pie } from 'react-chartjs-2'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport Swal from 'sweetalert2'\r\n\r\nclass JobItem extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      expandJob: false,\r\n      showEditForm: false,\r\n      showLogHours: false,\r\n      showWorkerEditForm: false,\r\n    }\r\n  }\r\n\r\n  static contextType = AuthContext\r\n\r\n  handleApprovalSubmit = async (\r\n    id,\r\n    status,\r\n    approval = false,\r\n    date_completed = null\r\n  ) => {\r\n    if (!approval) {\r\n      try {\r\n        await dbServices.updateJobStatus(\r\n          id,\r\n          status,\r\n          this.props.job.project_id,\r\n          approval,\r\n          this.props.job.organization,\r\n          date_completed\r\n        )\r\n      } catch (error) {\r\n        console.warn(error)\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text:\r\n            'There was an issue approving this task - please refresh the page and try again.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n        })\r\n      }\r\n    } else {\r\n      date_completed = dateConversions.dateToTimestamp(new Date())\r\n      try {\r\n        await dbServices.updateJobStatus(\r\n          id,\r\n          status,\r\n          this.props.job.project_id,\r\n          approval,\r\n          this.props.job.organization,\r\n          date_completed\r\n        )\r\n      } catch (error) {\r\n        console.warn(error)\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text:\r\n            'There was an issue approving this task - please refresh the page and try again.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteTask = e => {\r\n    e.stopPropagation()\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'By clicking the button below, you will be deleting this task.',\r\n      icon: 'question',\r\n      confirmButtonText: \"I'm sure!\",\r\n      showCancelButton: true,\r\n    }).then(value => {\r\n      if (value.dismiss === 'cancel') return null\r\n      else {\r\n        let id = this.props.job.id\r\n        let projectId = this.props.job.project_id\r\n        let org = this.props.job.organization\r\n\r\n        dbServices.deleteJobById(id, projectId, org)\r\n      }\r\n    })\r\n  }\r\n\r\n  renderEmployeeList = jobWorkers => {\r\n    if (!jobWorkers || jobWorkers.length === 0)\r\n      return <h5>No Workers Assigned</h5>\r\n    return jobWorkers.map((employee, index) => {\r\n      let itemKey = index + employee\r\n      return <li key={itemKey}>{employee}</li>\r\n    })\r\n  }\r\n\r\n  renderProjectButtons(approval, total_hours, hours_completed, id, status) {\r\n    const progress = Math.floor((hours_completed / total_hours) * 100)\r\n    if (this.context.currentUser.role === 'project worker') {\r\n      if (status === 'submitted' || status === 'completed') return <></>\r\n      if (approval || progress !== 100) {\r\n        return (\r\n          <>\r\n            <div\r\n              className=\"JobItem__fa\"\r\n              onClick={this.renderLogHoursForm}\r\n              data-tip=\"Log Hours\"\r\n            >\r\n              {StyleIcon({ style: 'clock' })}\r\n            </div>\r\n            {(status !== 'completed' || status !== 'submitted') &&\r\n            status !== 'edit request' ? (\r\n              <div\r\n                className=\"JobItem__fa\"\r\n                onClick={e => this.showWorkerEditForm(e)}\r\n                data-tip=\"Request Edit\"\r\n              >\r\n                {StyleIcon({ style: 'requestEdit' })}\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </>\r\n        )\r\n      } else {\r\n        return (\r\n          <>\r\n            <div\r\n              className=\"JobItem__fa_bigger\"\r\n              onClick={e => this.handleApprovalSubmit(id, 'submitted', false)}\r\n              data-tip=\"Submit Approval\"\r\n            >\r\n              {StyleIcon({ style: 'submit' })}\r\n            </div>\r\n          </>\r\n        )\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.context.currentUser.role === 'project manager' ||\r\n      this.context.currentUser.role === 'owner'\r\n    ) {\r\n      return (\r\n        <>\r\n          {this.context.currentUser.role === 'project manager' &&\r\n          progress !== 100 ? (\r\n            <div\r\n              className=\"JobItem__fa\"\r\n              onClick={this.renderLogHoursForm}\r\n              data-tip=\"Log Hours\"\r\n            >\r\n              {StyleIcon({ style: 'clock' })}\r\n            </div>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <div\r\n            className=\"JobItem__fa\"\r\n            onClick={this.showEditForm}\r\n            data-tip=\"Edit Task\"\r\n          >\r\n            {StyleIcon({ style: 'edit' })}\r\n          </div>\r\n          <div\r\n            className=\"JobItem__fa\"\r\n            data-tip=\"delete\"\r\n            onClick={this.deleteTask}\r\n          >\r\n            {StyleIcon({ style: 'delete' })}\r\n          </div>\r\n          {status === 'submitted' ? (\r\n            <div>\r\n              <div\r\n                className=\"JobItem__fa_bigger\"\r\n                onClick={e => this.handleApprovalSubmit(id, 'completed', true)}\r\n                data-tip=\"Approve\"\r\n              >\r\n                {StyleIcon({ style: 'approve' })}\r\n              </div>\r\n              <div\r\n                className=\"JobItem__fa_bigger\"\r\n                onClick={e => this.handleApprovalSubmit(id, 'revisions')}\r\n                data-tip=\"Make Revisions\"\r\n              >\r\n                {StyleIcon({ style: 'revise' })}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {hours_completed / total_hours === 1 ? (\r\n                <div\r\n                  className=\"JobItem__fa_bigger\"\r\n                  onClick={e =>\r\n                    this.handleApprovalSubmit(id, 'submitted', false)\r\n                  }\r\n                  data-tip=\"Submit Approval\"\r\n                >\r\n                  {StyleIcon({ style: 'submit' })}\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderChart(job) {\r\n    let employeeHoursArr = []\r\n    let labels = []\r\n\r\n    job.employee_hours &&\r\n      job.employee_hours.forEach(emp => {\r\n        labels.push(emp.name)\r\n        employeeHoursArr.push(emp.hours)\r\n      })\r\n\r\n    if (employeeHoursArr.every(item => item === 0)) {\r\n      employeeHoursArr = []\r\n    }\r\n\r\n    let employeeHours = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: `Logged Hours by Employee`,\r\n          data: employeeHoursArr,\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.6)',\r\n            'rgba(54, 162, 235, 0.6)',\r\n            'rgba(255, 206, 86, 0.6)',\r\n            'rgba(75, 192, 192, 0.6)',\r\n            'rgba(153, 102, 255, 0.6)',\r\n            'rgba(255, 159, 64, 0.6)',\r\n            'rgba(255, 99, 132, 0.6)',\r\n          ],\r\n        },\r\n      ],\r\n    }\r\n\r\n    if (employeeHoursArr.length !== 0) {\r\n      return (\r\n        <Pie\r\n          data={employeeHours}\r\n          options={{\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            title: { display: true, text: 'Hours Logged', fontSize: 20 },\r\n            legend: { labels: { fontSize: 16 } },\r\n          }}\r\n        />\r\n      )\r\n    } else {\r\n      return <></>\r\n    }\r\n  }\r\n\r\n  toggleExpand = () => {\r\n    this.setState({\r\n      expandJob: !this.state.expandJob,\r\n    })\r\n  }\r\n\r\n  showEditForm = e => {\r\n    e.stopPropagation()\r\n    this.setState({\r\n      showEditForm: !this.state.showEditForm,\r\n      expandJob: false,\r\n    })\r\n  }\r\n\r\n  submitEditForm = () => {\r\n    this.setState({\r\n      showEditForm: false,\r\n    })\r\n  }\r\n\r\n  submitLogHours = () => {\r\n    this.setState({\r\n      showLogHours: !this.state.showLogHours,\r\n    })\r\n  }\r\n\r\n  renderLogHoursForm = e => {\r\n    e.stopPropagation()\r\n    this.setState({\r\n      showLogHours: !this.state.showLogHours,\r\n      expandJob: false,\r\n    })\r\n  }\r\n\r\n  showWorkerEditForm = e => {\r\n    e.stopPropagation()\r\n    this.setState({\r\n      showWorkerEditForm: !this.state.showWorkerEditForm,\r\n      expandJob: false,\r\n    })\r\n  }\r\n\r\n  submitWorkerEdit = () => {\r\n    this.setState({\r\n      showWorkerEditForm: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const job = this.props.job\r\n    const progress = Math.floor((job.hours_completed / job.total_hours) * 100)\r\n    return (\r\n      <>\r\n        <li className=\"JobItem\" key={job.id} id={job.id}>\r\n          <div className=\"JobItem__container\" onClick={this.toggleExpand}>\r\n            <div className=\"JobItem__icon\">\r\n              {StyleIcon({\r\n                style: `${this.state.expandJob ? 'expand' : 'collapse'}`,\r\n              })}\r\n            </div>\r\n            <span className=\"JobItem__name\">{job.name}</span>\r\n            <div className=\"JobItem__details\">\r\n              <span>Details:</span>\r\n              <div className=\"JobItem__details_text\">{job.description}</div>\r\n            </div>\r\n            <div className=\"JobItem__progress\">\r\n              <div className=\"JobItem__meter_container\">\r\n                <span>Est. Progress</span>\r\n                <ProgressBar percentage={progress} />\r\n              </div>\r\n              <div className=\"JobItem__date_etc\">\r\n                <span className=\"JobItem__date\">\r\n                  Due: {dateConversions.TStoDisplayDate(job.deadline)}\r\n                </span>\r\n                {job.status === 'completed' && <span>Task Completed</span>}\r\n                {!job.approval &&\r\n                progress === 100 &&\r\n                job.status !== 'revisions' &&\r\n                this.context.currentUser.role !== 'project manager' ? (\r\n                  <span>Awaiting Approval</span>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {!job.approval &&\r\n                progress === 100 &&\r\n                job.status === 'revisions' ? (\r\n                  <span className=\"JobItem__revisions_requested\">\r\n                    Revision Requested\r\n                  </span>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {job.status !== 'completed'\r\n                  ? dateConversions.dateDiff(job.deadline) &&\r\n                    dateConversions.dateDiff(job.deadline)\r\n                  : ''}\r\n              </div>\r\n            </div>\r\n            <div className=\"JobItem__buttons\">\r\n              {this.renderProjectButtons(\r\n                job.approval,\r\n                job.total_hours,\r\n                job.hours_completed,\r\n                job.id,\r\n                job.status\r\n              )}\r\n            </div>\r\n          </div>\r\n          {this.state.expandJob && (\r\n            <div className=\"JobItem__expand_container\">\r\n              <div className=\"JobItem__assigned_employees\">\r\n                <span>Assigned Employees: </span>\r\n                <ul>{this.renderEmployeeList(job.project_workers)}</ul>\r\n              </div>\r\n              {this.renderChart(job)}\r\n            </div>\r\n          )}\r\n          <div className=\"JobItem__form_container\">\r\n            {this.state.showLogHours && (\r\n              <LogHours job={job} renderLogHoursForm={this.submitLogHours} />\r\n            )}\r\n            {this.state.showEditForm && (\r\n              <div className=\"JobItem__form\">\r\n                <JobForm showJobForm={this.submitEditForm} job={job} />\r\n              </div>\r\n            )}\r\n            {this.state.showWorkerEditForm &&\r\n              this.context.currentUser.role === 'project worker' && (\r\n                <WorkerEditForm\r\n                  job={job}\r\n                  renderEditForm={this.submitWorkerEdit}\r\n                  handleStatus={this.handleApprovalSubmit}\r\n                  className={'Form'}\r\n                />\r\n              )}\r\n          </div>\r\n          <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" />\r\n        </li>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default JobItem\r\n","import React, { Component } from 'react'\r\nimport { AuthContext } from '../../../services/Auth'\r\nimport './Jobs.css'\r\nimport JobItem from './JobItem'\r\nimport dbServices from '../../../services/dbServices'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default class Jobs extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.unsubscribe = null\r\n    this.state = {\r\n      jobs: [],\r\n      loading: true,\r\n      showLogHours: false,\r\n    }\r\n  }\r\n\r\n  static contextType = AuthContext\r\n\r\n  onJobsUpdate = querySnapshot => {\r\n    const jobs = []\r\n\r\n    if (this.context.currentUser.role === 'project worker') {\r\n      querySnapshot.forEach(doc => {\r\n        if (\r\n          doc.data().project_workers.includes(this.context.currentUser.name)\r\n        ) {\r\n          jobs.push(doc.data())\r\n        }\r\n      })\r\n    } else if (this.context.currentUser.role === 'project manager') {\r\n      querySnapshot.forEach(doc => {\r\n        if (doc.data().project_manager === this.context.currentUser.name) {\r\n          jobs.push(doc.data())\r\n        }\r\n      })\r\n    } else {\r\n      querySnapshot.forEach(doc => {\r\n        jobs.push(doc.data())\r\n      })\r\n    }\r\n\r\n    this.setState({\r\n      jobs,\r\n      loading: false,\r\n    })\r\n\r\n    this.grabProgress()\r\n  }\r\n\r\n  grabProgress = () => {\r\n    let totalHours = 0\r\n    let totalProgress = 0\r\n    this.state.jobs.map(job => {\r\n      totalHours = parseInt(job.total_hours) + totalHours\r\n      totalProgress = parseInt(job.hours_completed) + totalProgress\r\n      return null\r\n    })\r\n    this.props.getProgress(totalProgress, totalHours)\r\n  }\r\n\r\n  componentDidMount() {\r\n    try {\r\n      this.unsubscribe = dbServices\r\n        .jobsListener(this.context.currentUser.org, this.props.projectId)\r\n        .onSnapshot(this.onJobsUpdate)\r\n    } catch (error) {\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text:\r\n          \"There was an issue loading this project's tasks - please refresh the page and try again.\",\r\n        icon: 'error',\r\n        confirmButtonText: 'Close',\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  render() {\r\n    const { jobs } = this.state\r\n\r\n    if (this.state.loading) {\r\n      return <div></div>\r\n    } else {\r\n      return (\r\n        <>\r\n          <ul className=\"Jobs__list\">\r\n            {jobs.length > 0 ? (\r\n              jobs.map(job => (\r\n                <JobItem\r\n                  projectId={this.props.projectId}\r\n                  job={job}\r\n                  key={job.id}\r\n                />\r\n              ))\r\n            ) : (\r\n              <span>\r\n                There are currently no tasks to display for this project.\r\n              </span>\r\n            )}\r\n          </ul>\r\n        </>\r\n      )\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable no-loop-func */\r\nimport React, { Component } from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport { AuthContext } from '../../services/Auth'\r\nimport app from '../../services/base'\r\nimport './Statistics.css'\r\nconst db = app.firestore()\r\n\r\nexport default class Statistics extends Component {\r\n  static contextType = AuthContext\r\n  state = {\r\n    jobDue: {\r\n      labels: [\r\n        `${new Date(Date.now()).getMonth() + 1}/${new Date(\r\n          Date.now()\r\n        ).getDate()}/${new Date(Date.now()).getFullYear()}`,\r\n        `${new Date(Date.now() + 86400000).getMonth() + 1}/${new Date(\r\n          Date.now() + 86400000\r\n        ).getDate()}/${new Date(Date.now() + 86400000).getFullYear()}`,\r\n        `${new Date(Date.now() + 86400000 * 2).getMonth() + 1}/${new Date(\r\n          Date.now() + 86400000 * 2\r\n        ).getDate()}/${new Date(Date.now() + 86400000 * 2).getFullYear()}`,\r\n        `${new Date(Date.now() + 86400000 * 3).getMonth() + 1}/${new Date(\r\n          Date.now() + 86400000 * 3\r\n        ).getDate()}/${new Date(Date.now() + 86400000 * 3).getFullYear()}`,\r\n        `${new Date(Date.now() + 86400000 * 4).getMonth() + 1}/${new Date(\r\n          Date.now() + 86400000 * 4\r\n        ).getDate()}/${new Date(Date.now() + 86400000 * 4).getFullYear()}`,\r\n        `${new Date(Date.now() + 86400000 * 5).getMonth() + 1}/${new Date(\r\n          Date.now() + 86400000 * 5\r\n        ).getDate()}/${new Date(Date.now() + 86400000 * 5).getFullYear()}`,\r\n        `${new Date(Date.now() + 86400000 * 6).getMonth() + 1}/${new Date(\r\n          Date.now() + 86400000 * 6\r\n        ).getDate()}/${new Date(Date.now() + 86400000 * 6).getFullYear()}`,\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: `Tasks Due`,\r\n          data: [],\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.8)',\r\n            'rgba(54, 162, 235, 0.8)',\r\n            'rgba(255, 206, 86, 0.8)',\r\n            'rgba(75, 192, 192, 0.8)',\r\n            'rgba(153, 102, 255, 0.8)',\r\n            'rgba(255, 159, 64, 0.8)',\r\n            'rgba(255, 99, 132, 0.8)',\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    jobHistory: {\r\n      labels: [\r\n        `${new Date(Date.now() - 86400000).getMonth() + 1}/${new Date(\r\n          Date.now() - 86400000 * 7\r\n        ).getDate()}/${new Date(Date.now() - 86400000).getFullYear()}`,\r\n        `${new Date(Date.now() - 86400000).getMonth() + 1}/${new Date(\r\n          Date.now() - 86400000 * 6\r\n        ).getDate()}/${new Date(Date.now() - 86400000).getFullYear()}`,\r\n        `${new Date(Date.now() - 86400000).getMonth() + 1}/${new Date(\r\n          Date.now() - 86400000 * 5\r\n        ).getDate()}/${new Date(Date.now() - 86400000).getFullYear()}`,\r\n        `${new Date(Date.now() - 86400000).getMonth() + 1}/${new Date(\r\n          Date.now() - 86400000 * 4\r\n        ).getDate()}/${new Date(Date.now() - 86400000).getFullYear()}`,\r\n        `${new Date(Date.now() - 86400000).getMonth() + 1}/${new Date(\r\n          Date.now() - 86400000 * 3\r\n        ).getDate()}/${new Date(Date.now() - 86400000).getFullYear()}`,\r\n        `${new Date(Date.now() - 86400000).getMonth() + 1}/${new Date(\r\n          Date.now() - 86400000 * 2\r\n        ).getDate()}/${new Date(Date.now() - 86400000).getFullYear()}`,\r\n        `${new Date(Date.now() - 86400000).getMonth() + 1}/${new Date(\r\n          Date.now() - 86400000\r\n        ).getDate()}/${new Date(Date.now() - 86400000).getFullYear()}`,\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: `Task Completion History (7 days)`,\r\n          data: [],\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.8)',\r\n            'rgba(54, 162, 235, 0.8)',\r\n            'rgba(255, 206, 86, 0.8)',\r\n            'rgba(75, 192, 192, 0.8)',\r\n            'rgba(153, 102, 255, 0.8)',\r\n            'rgba(255, 159, 64, 0.8)',\r\n            'rgba(255, 99, 132, 0.8)',\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  populateStats = async () => {\r\n    let jobDue = new Array(this.state.jobDue.labels.length)\r\n    let jobHistory = new Array(this.state.jobDue.labels.length)\r\n    for (let i = 0; i < this.state.jobDue.labels.length; i++) {\r\n      await db\r\n        .collection('organizations')\r\n        .doc(this.context.currentUser.org)\r\n        .collection('projects')\r\n        .doc(this.props.id)\r\n        .collection('jobs')\r\n        .get()\r\n        .then(snapshot => {\r\n          let jobDueCount = 0\r\n          let jobHistoryCount = 0\r\n          snapshot.docs.forEach(doc => {\r\n            if (!doc.data().date_completed) {\r\n              if (\r\n                this.state.jobDue.labels[i] ===\r\n                `${new Date(doc.data().deadline.seconds * 1000).getMonth() +\r\n                  1}/${new Date(\r\n                  doc.data().deadline.seconds * 1000\r\n                ).getDate()}/${new Date(\r\n                  doc.data().deadline.seconds * 1000\r\n                ).getFullYear()}`\r\n              ) {\r\n                jobDueCount++\r\n              }\r\n            }\r\n            if (doc.data().date_completed) {\r\n              if (\r\n                this.state.jobHistory.labels[i] ===\r\n                  `${new Date(\r\n                    doc.data().date_completed.seconds * 1000\r\n                  ).getMonth() + 1}/${new Date(\r\n                    doc.data().date_completed.seconds * 1000\r\n                  ).getDate()}/${new Date(\r\n                    doc.data().date_completed.seconds * 1000\r\n                  ).getFullYear()}` &&\r\n                doc.data().status === 'completed'\r\n              ) {\r\n                jobHistoryCount++\r\n              }\r\n            }\r\n          })\r\n          jobDue[i] = jobDueCount\r\n          jobHistory[i] = jobHistoryCount\r\n        })\r\n      if (jobDue.every(item => item === 0)) {\r\n        jobDue = []\r\n      }\r\n      if (jobHistory.every(item => item === 0)) {\r\n        jobHistory = []\r\n      }\r\n    }\r\n    this.setState({\r\n      jobDue: {\r\n        labels: this.state.jobDue.labels,\r\n        datasets: [\r\n          {\r\n            label: this.state.jobDue.datasets[0].label,\r\n            data: jobDue,\r\n            backgroundColor: this.state.jobDue.datasets[0].backgroundColor,\r\n          },\r\n        ],\r\n      },\r\n      jobHistory: {\r\n        labels: this.state.jobHistory.labels,\r\n        datasets: [\r\n          {\r\n            label: this.state.jobHistory.datasets[0].label,\r\n            data: jobHistory,\r\n            backgroundColor: this.state.jobHistory.datasets[0].backgroundColor,\r\n          },\r\n        ],\r\n      },\r\n    })\r\n    if (this.props.updated) this.props.turnOffUpdate()\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.populateStats()\r\n  }\r\n\r\n  render() {\r\n    if (this.props.updated) this.populateStats()\r\n    return (\r\n      <div className=\"Statistics\">\r\n        {this.state.jobDue.datasets[0].data.length !== 0 ? (\r\n          <Bar\r\n            className=\"due\"\r\n            data={this.state.jobDue}\r\n            options={{\r\n              legend: {\r\n                labels: {\r\n                  fontSize: 30,\r\n                },\r\n              },\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                      callback: function(value) {\r\n                        if (value % 1 === 0) {\r\n                          return value\r\n                        }\r\n                      },\r\n                      fontSize: 20,\r\n                    },\r\n                  },\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    ticks: {\r\n                      fontSize: 20,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n            }}\r\n          />\r\n        ) : (\r\n          <span>You have no tasks due soon</span>\r\n        )}\r\n        {this.state.jobHistory.datasets[0].data.length !== 0 ? (\r\n          <Bar\r\n            className=\"history\"\r\n            data={this.state.jobHistory}\r\n            options={{\r\n              legend: {\r\n                labels: {\r\n                  fontSize: 30,\r\n                },\r\n              },\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                      callback: function(value) {\r\n                        if (value % 1 === 0) {\r\n                          return value\r\n                        }\r\n                      },\r\n                      fontSize: 20,\r\n                    },\r\n                  },\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    ticks: {\r\n                      fontSize: 20,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n            }}\r\n          />\r\n        ) : (\r\n          <span className=\"Statistics__no_tasks\">\r\n            You have not completed any tasks in the last 7 days\r\n          </span>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './ProjectView.css'\r\nimport Loading from '../../Loading/Loading'\r\nimport { AuthContext } from '../../../services/Auth.js'\r\nimport Jobs from '../Jobs/Jobs'\r\nimport Statistics from '../../Statistics/Statistics'\r\nimport Sidebar from '../../Sidebar/Sidebar'\r\nimport JobForm from '../JobForm/JobForm'\r\nimport dbServices from '../../../services/dbServices'\r\nimport dateConversions from '../../../services/dateConversions'\r\nimport { withRouter, Redirect } from 'react-router'\r\nimport Swal from 'sweetalert2'\r\nimport StyleIcon from '../../StyleIcon/StyleIcon'\r\nimport ProjectBar from '../../Project/ProjectBar/ProjectBar'\r\n\r\nclass ProjectView extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.unsubscribe = null\r\n    this.state = {\r\n      project: null,\r\n      showJobForm: false,\r\n      loading: true,\r\n      toggleState: false,\r\n      progress: 0,\r\n      total: 0,\r\n      error: null,\r\n      expandStats: true,\r\n      expandJobs: true,\r\n      expandPersonnel: true,\r\n    }\r\n  }\r\n\r\n  static contextType = AuthContext\r\n\r\n  updateProject = data => {\r\n    this.setState({\r\n      project: data,\r\n      loading: false,\r\n    })\r\n  }\r\n\r\n  getProgress = (jobProg, jobTotal, job) => {\r\n    let currentProgress = 0\r\n    let currentTotal = 0\r\n    let newProject = this.state.project\r\n\r\n    currentProgress = currentProgress + jobProg\r\n    currentTotal = currentTotal + jobTotal\r\n    if (currentProgress === 0) {\r\n      this.setState({\r\n        progress: 0,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        progress: parseInt(currentProgress),\r\n        total: currentTotal,\r\n      })\r\n\r\n      newProject.progress = parseInt(\r\n        ((currentProgress / currentTotal) * 100).toFixed(2)\r\n      )\r\n      dbServices.updateProject(newProject)\r\n      this.setState({\r\n        project: newProject,\r\n      })\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.unsubscribe = dbServices\r\n        .projectsListener(this.context.currentUser.org, this.props.id)\r\n        .onSnapshot(doc => {\r\n          this.updateProject(doc.data())\r\n        })\r\n    } catch (error) {\r\n      this.setState({\r\n        error: 'Error',\r\n      })\r\n      console.warn(error)\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text:\r\n          \"There was an issue loading this project's information - please refresh the page and try again.\",\r\n        icon: 'error',\r\n        confirmButtonText: 'Close',\r\n      })\r\n    }\r\n  }\r\n\r\n  autoComplete = () => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text:\r\n        'By clicking the button below, you will automatically mark this project as complete along with any unfinished tasks.',\r\n      icon: 'question',\r\n      confirmButtonText: \"I'm sure!\",\r\n      showCancelButton: true,\r\n    }).then(value => {\r\n      if (value.dismiss === 'cancel') return null\r\n      else {\r\n        let proj = this.state.project\r\n        proj.autoComplete = true\r\n        proj.alert = true\r\n        proj.date_completed = dateConversions.dateToTimestamp(new Date())\r\n        dbServices.updateProject(proj)\r\n      }\r\n    })\r\n  }\r\n\r\n  approveProject = async () => {\r\n    let proj = { ...this.state.project, date_completed: null }\r\n    proj.date_completed = dateConversions.dateToTimestamp(new Date())\r\n    proj.alert = true\r\n    await dbServices.updateProject(proj)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe()\r\n  }\r\n\r\n  showJobForm = e => {\r\n    e.stopPropagation()\r\n    if (this.state.showJobForm)\r\n      this.setState({ showJobForm: false, expandJobs: true })\r\n    else\r\n      this.setState({\r\n        showJobForm: true,\r\n        expandJobs: false,\r\n      })\r\n  }\r\n\r\n  submitJobForm = () => {\r\n    this.setState({\r\n      showJobForm: false,\r\n      statsUpdated: true,\r\n    })\r\n  }\r\n\r\n  turnOffUpdate = () => {\r\n    this.setState({\r\n      statsUpdated: false,\r\n    })\r\n  }\r\n\r\n  expandStats = () => {\r\n    this.setState({\r\n      expandStats: !this.state.expandStats,\r\n    })\r\n  }\r\n\r\n  expandJobs = () => {\r\n    this.setState({\r\n      expandJobs: !this.state.expandJobs,\r\n    })\r\n  }\r\n\r\n  toggleExpandPersonnel = e => {\r\n    e.stopPropagation()\r\n    this.setState({ expandPersonnel: !this.state.expandPersonnel })\r\n  }\r\n\r\n  render() {\r\n    const { project, showJobForm } = this.state\r\n    const user = this.context.currentUser\r\n\r\n    if (this.state.loading && !this.state.error) {\r\n      return <Loading />\r\n    } else if (this.state.error) {\r\n      return <h2>Project was unable to load</h2>\r\n    } else if (!project) {\r\n      return <Redirect to=\"/dashboard\" />\r\n    } else {\r\n      return (\r\n        <section>\r\n          <div test-id=\"projectContainer\" test-data={project.id}>\r\n            <header className=\"App__org_header\">\r\n              <h2 id=\"companyName\">{this.context.currentUser.org}</h2>\r\n              <span id=\"currentDate\">{new Date().toDateString()}</span>\r\n            </header>\r\n            <div className=\"projectbar_container App__separate_bottom\">\r\n              <ProjectBar\r\n                proj={project}\r\n                role={this.context.currentUser.role}\r\n                view=\"project\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div id=\"projectView_main\">\r\n            <div className=\"ProjectView__jobs_stats\">\r\n              {user.role === 'project worker' ? (\r\n                <></>\r\n              ) : (\r\n                <div className=\"ProjectView__stats App__separate_bottom\">\r\n                  <div\r\n                    className=\"App__section_header\"\r\n                    onClick={() => this.expandStats()}\r\n                  >\r\n                    <div className=\"App__fa_h1\">\r\n                      {StyleIcon({\r\n                        style: `${this.state.expandStats ? 'minus' : 'plus'}`,\r\n                      })}\r\n                      <h3>Statistics</h3>\r\n                    </div>\r\n                  </div>\r\n                  {this.state.expandStats && (\r\n                    <div className=\"ProjectView__stats_container\">\r\n                      <Statistics\r\n                        {...this.props}\r\n                        updated={this.state.statsUpdated}\r\n                        turnOffUpdate={this.turnOffUpdate}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div\r\n                className=\"App__section_header\"\r\n                onClick={() => this.expandJobs()}\r\n              >\r\n                <div className=\"App__fa_h1\">\r\n                  {' '}\r\n                  {StyleIcon({\r\n                    style: `${this.state.expandJobs ? 'minus' : 'plus'}`,\r\n                  })}\r\n                  {user.role === 'project worker' ? (\r\n                    <h3>Your Tasks</h3>\r\n                  ) : (\r\n                    <h3>Tasks</h3>\r\n                  )}\r\n                </div>\r\n\r\n                {user.role === 'project worker' ? (\r\n                  ''\r\n                ) : (\r\n                  <button\r\n                    className=\"ProjectView__add\"\r\n                    onClick={this.showJobForm}\r\n                    test-id=\"add-task\"\r\n                  >\r\n                    Add Task\r\n                  </button>\r\n                )}\r\n              </div>\r\n              {showJobForm && (\r\n                <JobForm\r\n                  {...this.props}\r\n                  setJob={this.setJob}\r\n                  project={project}\r\n                  showJobForm={this.submitJobForm}\r\n                  projectId={this.props.id}\r\n                />\r\n              )}\r\n              {this.state.expandJobs && (\r\n                <Jobs\r\n                  projectId={this.props.id}\r\n                  getProgress={this.getProgress}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <section className=\"App__personnel App__separate_top App__separate_bottom\">\r\n              <div\r\n                className=\"App__section_header App__separate_top\"\r\n                onClick={this.toggleExpandPersonnel}\r\n              >\r\n                <div className=\"App__fa_h1\">\r\n                  {StyleIcon({\r\n                    style: `${this.state.expandPersonnel ? 'minus' : 'plus'}`,\r\n                  })}\r\n                  <h1>Personnel</h1>\r\n                </div>\r\n              </div>\r\n              {this.state.expandPersonnel && (\r\n                <Sidebar view=\"project\" project={this.state.project} />\r\n              )}\r\n            </section>\r\n          </div>\r\n        </section>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(ProjectView)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './LandingPage.css'\r\n\r\nexport default function LandingPage() {\r\n  return (\r\n    <section className=\"LandingPage\">\r\n      <div className=\"LandingPage__hero_text\">\r\n        <h1>\r\n          <span className=\"LandingPage__t1\">Dream Bigger,</span>\r\n          <span className=\"LandingPage__t2\">Build Faster,</span>\r\n          <span className=\"LandingPage__t3\">Work Less.</span>\r\n        </h1>\r\n        <span className=\"LandingPage__blurb\">\r\n          Create, update, assign, track, and analyze your businesses projects\r\n          securely on the cloud from any location with access to the web.\r\n        </span>\r\n      </div>\r\n      <Link className=\"LandingPage__btn\" to=\"/register\">\r\n        Register Now!\r\n      </Link>\r\n    </section>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { AuthContext } from './Auth'\r\n\r\nconst PrivateRoute = ({\r\n  component: RouteComponent,\r\n  location,\r\n  setPath,\r\n  ...rest\r\n}) => {\r\n  const { currentUser } = useContext(AuthContext)\r\n\r\n  if (currentUser) setPath(location.pathname)\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={'/'} />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\n\r\nconst PublicRoute = ({ component: Component, setPath, ...rest }) => {\r\n  localStorage.removeItem('path')\r\n  setPath(null)\r\n\r\n  return <Route {...rest} render={props => <Component {...props} />} />\r\n}\r\n\r\nexport default PublicRoute\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\nimport { AuthContext } from '../../services/Auth'\r\nimport app from '../../services/base.js'\r\nimport dbServices from '../../services/dbServices'\r\nimport Swal from 'sweetalert2'\r\nimport Sidebar from '../Sidebar/Sidebar'\r\nimport StyleIcon from '../StyleIcon/StyleIcon'\r\nimport './Profile.css'\r\n\r\nconst Profile = props => {\r\n  let isMounted = false \r\n  const { currentUser } = useContext(AuthContext)\r\n  const [userInfo, setUserInfo] = useState({})\r\n  const [userProjects, setUserProjects] = useState([])\r\n  const [workerProjects, setWorkerProjects] = useState([])\r\n  const [expandPersonnel, setExpandPersonnel] = useState(true)\r\n  const functions = app.functions()\r\n\r\n  const handleClick = async event => {\r\n    event.preventDefault()\r\n    const promoteFunc = await functions.httpsCallable('promoteUser')\r\n    promoteFunc({\r\n      email: userInfo.email,\r\n      org: userInfo.org,\r\n    }).then(() => {\r\n      try {\r\n        dbServices.promoteUser(userInfo.org, userInfo.email).then(() =>\r\n          getUserInfo().then(info => {\r\n            if (isMounted) {\r\n              setUserInfo(info)\r\n            }\r\n          })\r\n        )\r\n      } catch (error) {\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text: 'Failed to promote employee.',\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const getUserInfo = async () => {\r\n    let info = {}\r\n    try {\r\n      await dbServices\r\n        .getUser(props.match.params.id, currentUser.org)\r\n        .then(snapshot => {\r\n          snapshot.forEach(doc => {\r\n            info = {\r\n              role: doc.data().role,\r\n              email: doc.data().email,\r\n              name: doc.data().name,\r\n              org: doc.data().org,\r\n            }\r\n          })\r\n        })\r\n    } catch (error) {\r\n      console.warn(error)\r\n      Swal.fire({\r\n        title: 'Error!',\r\n        text:\r\n          \"There was an issue loading this employee's information - please refresh the page and try again.\",\r\n        icon: 'error',\r\n        confirmButtonText: 'Close',\r\n      })\r\n    }\r\n\r\n    return info\r\n  }\r\n\r\n  const getUserProjects = async info => {\r\n    if (info.role === 'project worker')\r\n      try {\r\n        await dbServices\r\n          .getEmployeeProjects(info.name, info.org)\r\n          .then(snapshot => {\r\n            let projects = [];\r\n            snapshot.forEach(doc => {\r\n              projects.push(doc.data())\r\n            })\r\n            if (isMounted) {\r\n              setUserProjects(projects)\r\n            }\r\n          })\r\n      } catch (error) {\r\n        console.warn(error)\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text:\r\n            \"There was an issue loading this employee's project information - please refresh the page and try again.\",\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n        })\r\n      }\r\n    else if (info.role === 'project manager') {\r\n      try {\r\n        let projects = [];\r\n        let workerProjects = [];\r\n        await dbServices\r\n          .getManagerProjects(info.name, info.org)\r\n          .then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n              projects.push(doc.data())\r\n            })\r\n            if (isMounted) {\r\n              setUserProjects(projects)\r\n            }   \r\n          })\r\n          .then(() => {\r\n            dbServices.getEmployeeProjects(info.name, info.org)\r\n              .then(snapshot => {\r\n                snapshot.forEach(doc => {\r\n                  if (doc.data().project_manager !== info.name) {\r\n                    workerProjects.push(doc.data())\r\n                  }\r\n                })\r\n                if (isMounted) {\r\n                  setWorkerProjects(workerProjects)\r\n                }   \r\n              })\r\n          })\r\n      } catch (error) {\r\n        console.warn(error)\r\n        Swal.fire({\r\n          title: 'Error!',\r\n          text:\r\n            \"There was an issue loading this employee's project information - please refresh the page and try again.\",\r\n          icon: 'error',\r\n          confirmButtonText: 'Close',\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    isMounted = true\r\n    getUserInfo().then(info => {\r\n      if (isMounted) {\r\n        setUserInfo(info)\r\n      }    \r\n      getUserProjects(info)\r\n    })\r\n    return () => {\r\n      isMounted = false \r\n    }\r\n    // eslint-disable-next-line\r\n  }, [functions])\r\n\r\n  if (userInfo && userInfo.role)\r\n    return (\r\n      <section className=\"Profile__container\">\r\n        <div className=\"App__org_header\">\r\n          {<h2>{userInfo.org}</h2>}\r\n          <span className=\"App__date\">{new Date().toDateString()}</span>\r\n        </div>\r\n        <div className=\"Profile__main\">\r\n          <section className=\"Profile__user\">\r\n            <div className=\"App__section_header\">\r\n              <h1>{userInfo.name}</h1>\r\n              {currentUser &&\r\n                currentUser.role === 'owner' &&\r\n                userInfo &&\r\n                userInfo.role === 'project worker' && (\r\n                  <button\r\n                    className=\"Profile__promote_btn\"\r\n                    onClick={event => handleClick(event)}\r\n                  >\r\n                    Promote User\r\n                  </button>\r\n                )}\r\n            </div>\r\n            <ul className=\"Profile__user_info\">\r\n              <li>\r\n                <span className=\"Profile__bold\">Role:</span> {userInfo.role}\r\n              </li>\r\n              <li>\r\n                <span className=\"Profile__bold\">Email:</span>\r\n                {userInfo.email}\r\n              </li>\r\n              <li>\r\n                <span className=\"Profile__bold\">Org:</span>\r\n                {userInfo.org}\r\n              </li>\r\n            </ul>\r\n            {userInfo.role === 'project worker' ? <h2>User Projects:</h2> : <h2>Managing:</h2>}\r\n            {userProjects.length > 0 ? (\r\n              <ul className=\"Profile__user_projects\">\r\n                {userProjects.map((proj, i) => {\r\n                  return (\r\n                    <li key={i}>\r\n                      <Link to={`/project/${proj.id}`}>{proj.name}</Link>\r\n                    </li>\r\n                  )\r\n                })}\r\n              </ul>\r\n            ) : (\r\n              <ul className=\"Profile__user_projects\">\r\n                <li>\r\n                  No Projects Assigned.\r\n                </li>\r\n              </ul>\r\n            )}\r\n            {userInfo.role === 'project manager' && workerProjects.length > 0 ?\r\n              <>\r\n                <h2>Working:</h2>\r\n                <ul className=\"Profile__user_projects\">\r\n                {workerProjects.map((proj, i) => {\r\n                  return (\r\n                    <li key={i}>\r\n                      <Link to={`/project/${proj.id}`}>{proj.name}</Link>\r\n                    </li>\r\n                  )\r\n                })}\r\n              </ul>\r\n              </>\r\n              : ''\r\n            }\r\n          </section>\r\n          <section className=\"App__personnel App__separate_top\">\r\n            <div\r\n              className=\"App__section_header\"\r\n              onClick={() => setExpandPersonnel(!expandPersonnel)}\r\n            >\r\n              <div className=\"App__fa_h1\">\r\n                {StyleIcon({\r\n                  style: `${expandPersonnel ? 'minus' : 'plus'}`,\r\n                })}\r\n                <h1>Personnel</h1>\r\n              </div>\r\n            </div>\r\n            {expandPersonnel && <Sidebar />}\r\n          </section>\r\n        </div>\r\n      </section>\r\n    )\r\n  return <></>\r\n}\r\n\r\nexport default withRouter(Profile)\r\n","import React from 'react'\r\nimport skyscraper from '../../images/skyscraper.svg'\r\nimport './CatchAll.css'\r\n\r\nexport const CatchAll = () => {\r\n  return (\r\n    <div className=\"LandingPage CatchAll\">\r\n      <img src={skyscraper} alt=\"skyscraper\" />\r\n      <h3 className=\"CatchAll__h3\">Ruh Roh</h3>\r\n      <span className=\"CatchAll__span\">\r\n        What you're looking for doesn't exist.\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { Switch, Route, withRouter } from 'react-router-dom'\r\nimport Dashboard from './components/Dashboard/Dashboard'\r\nimport Header from './components/Header/Header'\r\nimport Login from './components/Account/Login'\r\nimport SignUp from './components/Account/SignUp'\r\nimport ProjectView from './components/Project/ProjectView/ProjectView'\r\nimport LandingPage from './components/LandingPage/LandingPage'\r\nimport PrivateRoute from './services/PrivateRoute'\r\nimport PublicRoute from './services/PublicRoute'\r\nimport { AuthContext } from './services/Auth.js'\r\nimport Profile from './components/Profile/Profile'\r\nimport './App.css'\r\nimport { CatchAll } from './components/CatchAll/CatchAll'\r\n\r\nconst App = props => {\r\n  const { currentUser } = useContext(AuthContext)\r\n  // eslint-disable-next-line\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const initialPath = () => {\r\n    if (localStorage.getItem('path')) return localStorage.getItem('path')\r\n    return null\r\n  }\r\n\r\n  const [path, setPath] = useState(initialPath)\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('path') && !path) return\r\n    localStorage.setItem('path', path)\r\n    // eslint-disable-next-line\r\n  }, [path])\r\n\r\n  useEffect(() => {\r\n    if (path && currentUser) {\r\n      if (path !== props.location.pathname) props.history.push(path)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentUser, path])\r\n\r\n  if (loading) return <></>\r\n  else {\r\n    return (\r\n      <>\r\n        <header>\r\n          <Header\r\n            userName={currentUser && currentUser.name}\r\n            role={currentUser && currentUser.role}\r\n            setPath={setPath}\r\n          />\r\n        </header>\r\n        <main className=\"App__main\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={LandingPage} />\r\n            <PublicRoute\r\n              exact\r\n              path=\"/login\"\r\n              setPath={setPath}\r\n              component={Login}\r\n            />\r\n            <PrivateRoute\r\n              location={props.location}\r\n              setPath={setPath}\r\n              path=\"/profile/:id\"\r\n              component={props => <Profile id={props.match.params.id} />}\r\n            />\r\n            <PublicRoute\r\n              path=\"/register\"\r\n              setPath={setPath}\r\n              component={() => <SignUp />}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/dashboard\"\r\n              location={props.location}\r\n              setPath={setPath}\r\n              component={Dashboard}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/project/:id\"\r\n              location={props.location}\r\n              setPath={setPath}\r\n              component={props => <ProjectView id={props.match.params.id} />}\r\n            />\r\n            <PublicRoute\r\n              exact\r\n              path=\"*\"\r\n              setPath={setPath}\r\n              component={CatchAll}\r\n            />\r\n          </Switch>\r\n        </main>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { AuthProvider } from './services/Auth'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport './reset.css'\r\n\r\nimport {\r\n  faAngleRight,\r\n  faAngleDown,\r\n  faPlus,\r\n  faMinus,\r\n  faChevronUp,\r\n  faChevronDown,\r\n  faEdit,\r\n  faTimesCircle,\r\n  faAngleLeft,\r\n  faClipboardList,\r\n  faUserEdit,\r\n  faTrashAlt,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {\r\n  faCalendarCheck,\r\n  faCheckSquare,\r\n  faClock,\r\n} from '@fortawesome/free-regular-svg-icons'\r\n\r\nlibrary.add(\r\n  faAngleRight,\r\n  faAngleLeft,\r\n  faAngleDown,\r\n  faPlus,\r\n  faMinus,\r\n  faChevronUp,\r\n  faChevronDown,\r\n  faEdit,\r\n  faTimesCircle,\r\n  faCalendarCheck,\r\n  faCheckSquare,\r\n  faAngleDown,\r\n  faClock,\r\n  faClipboardList,\r\n  faUserEdit,\r\n  faTrashAlt\r\n)\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <AuthProvider>\r\n      <App />\r\n    </AuthProvider>\r\n  </Router>,\r\n  document.getElementById('root')\r\n)\r\n","module.exports = __webpack_public_path__ + \"static/media/lazy.25ad2c34.svg\";","module.exports = __webpack_public_path__ + \"static/media/skyscraper.ceda3298.svg\";"],"sourceRoot":""}